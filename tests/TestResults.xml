<?xml version="1.0" encoding="utf-8" standalone="no"?>
<test-results xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="nunit_schema_2.5.xsd" name="Pester" total="735" errors="0" failures="0" not-run="0" inconclusive="0" ignored="0" skipped="0" invalid="0" date="2022-09-05" time="11:52:31">
  <environment clr-version="4.0.30319.42000" user-domain="APPVEYOR-VM" cwd="C:\projects\evergreen" platform="Microsoft Windows Server 2019 Datacenter|C:\Windows|\Device\Harddisk0\Partition4" machine-name="APPVEYOR-VM" nunit-version="2.5.8.0" os-version="10.0.17763" user="appveyor" />
  <culture-info current-culture="en-US" current-uiculture="en-US" />
  <test-suite type="TestFixture" name="Pester" executed="True" result="Success" success="True" time="329.4151" asserts="0" description="Pester">
    <results>
      <test-suite type="TestFixture" name="C:\projects\evergreen\tests\Main.Tests.ps1" executed="True" result="Success" success="True" time="205.6145" asserts="0" description="C:\projects\evergreen\tests\Main.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="General project validation" executed="True" result="Success" success="True" time="70.3986" asserts="0" description="General project validation">
            <results>
              <test-suite type="ParameterizedTest" name="General project validation.Script &lt;file.Name&gt; should be valid PowerShell" executed="True" result="Success" success="True" time="68.5228" asserts="0" description="Script &lt;file.Name&gt; should be valid PowerShell">
                <results>
                  <test-case description="Script Get-1Password.ps1 should be valid PowerShell" name="General project validation.Script Get-1Password.ps1 should be valid PowerShell" time="1.5162" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-1Password7.ps1 should be valid PowerShell" name="General project validation.Script Get-1Password7.ps1 should be valid PowerShell" time="0.2597" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-7zip.ps1 should be valid PowerShell" name="General project validation.Script Get-7zip.ps1 should be valid PowerShell" time="0.2174" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-7ZipZS.ps1 should be valid PowerShell" name="General project validation.Script Get-7ZipZS.ps1 should be valid PowerShell" time="0.2069" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-AdobeAcrobat.ps1 should be valid PowerShell" name="General project validation.Script Get-AdobeAcrobat.ps1 should be valid PowerShell" time="0.2374" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-AdobeAcrobatDC.ps1 should be valid PowerShell" name="General project validation.Script Get-AdobeAcrobatDC.ps1 should be valid PowerShell" time="0.2241" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-AdobeAcrobatProStdDC.ps1 should be valid PowerShell" name="General project validation.Script Get-AdobeAcrobatProStdDC.ps1 should be valid PowerShell" time="0.2289" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-AdobeAcrobatReaderDC.ps1 should be valid PowerShell" name="General project validation.Script Get-AdobeAcrobatReaderDC.ps1 should be valid PowerShell" time="0.2411" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-AdobeBrackets.ps1 should be valid PowerShell" name="General project validation.Script Get-AdobeBrackets.ps1 should be valid PowerShell" time="0.2585" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-AdoptiumTemurin11.ps1 should be valid PowerShell" name="General project validation.Script Get-AdoptiumTemurin11.ps1 should be valid PowerShell" time="0.5245" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-AdoptiumTemurin16.ps1 should be valid PowerShell" name="General project validation.Script Get-AdoptiumTemurin16.ps1 should be valid PowerShell" time="0.2488" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-AdoptiumTemurin17.ps1 should be valid PowerShell" name="General project validation.Script Get-AdoptiumTemurin17.ps1 should be valid PowerShell" time="0.2274" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-AdoptiumTemurin18.ps1 should be valid PowerShell" name="General project validation.Script Get-AdoptiumTemurin18.ps1 should be valid PowerShell" time="0.2172" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-AdoptiumTemurin8.ps1 should be valid PowerShell" name="General project validation.Script Get-AdoptiumTemurin8.ps1 should be valid PowerShell" time="0.2173" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-AdoptOpenJDK11.ps1 should be valid PowerShell" name="General project validation.Script Get-AdoptOpenJDK11.ps1 should be valid PowerShell" time="0.3678" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-AdoptOpenJDK16.ps1 should be valid PowerShell" name="General project validation.Script Get-AdoptOpenJDK16.ps1 should be valid PowerShell" time="0.2358" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-AdoptOpenJDK8.ps1 should be valid PowerShell" name="General project validation.Script Get-AdoptOpenJDK8.ps1 should be valid PowerShell" time="0.3442" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-AkeoRufus.ps1 should be valid PowerShell" name="General project validation.Script Get-AkeoRufus.ps1 should be valid PowerShell" time="0.3602" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-AmazonCorretto.ps1 should be valid PowerShell" name="General project validation.Script Get-AmazonCorretto.ps1 should be valid PowerShell" time="0.2496" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Anaconda.ps1 should be valid PowerShell" name="General project validation.Script Get-Anaconda.ps1 should be valid PowerShell" time="0.2146" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Anki.ps1 should be valid PowerShell" name="General project validation.Script Get-Anki.ps1 should be valid PowerShell" time="0.2177" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-AppVentiX.ps1 should be valid PowerShell" name="General project validation.Script Get-AppVentiX.ps1 should be valid PowerShell" time="0.2274" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-ArtifexGhostscript.ps1 should be valid PowerShell" name="General project validation.Script Get-ArtifexGhostscript.ps1 should be valid PowerShell" time="0.2109" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-AtlassianSourcetree.ps1 should be valid PowerShell" name="General project validation.Script Get-AtlassianSourcetree.ps1 should be valid PowerShell" time="0.2198" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Audacity.ps1 should be valid PowerShell" name="General project validation.Script Get-Audacity.ps1 should be valid PowerShell" time="0.2175" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-AutoDarkMode.ps1 should be valid PowerShell" name="General project validation.Script Get-AutoDarkMode.ps1 should be valid PowerShell" time="0.2169" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-BeekeeperStudio.ps1 should be valid PowerShell" name="General project validation.Script Get-BeekeeperStudio.ps1 should be valid PowerShell" time="0.2133" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-BISF.ps1 should be valid PowerShell" name="General project validation.Script Get-BISF.ps1 should be valid PowerShell" time="0.2235" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-BitwardenDesktop.ps1 should be valid PowerShell" name="General project validation.Script Get-BitwardenDesktop.ps1 should be valid PowerShell" time="0.2607" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-BlenderLauncher.ps1 should be valid PowerShell" name="General project validation.Script Get-BlenderLauncher.ps1 should be valid PowerShell" time="0.2216" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-BlueJ.ps1 should be valid PowerShell" name="General project validation.Script Get-BlueJ.ps1 should be valid PowerShell" time="0.2397" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-CendioThinLinc.ps1 should be valid PowerShell" name="General project validation.Script Get-CendioThinLinc.ps1 should be valid PowerShell" time="0.2504" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-CitrixVMTools.ps1 should be valid PowerShell" name="General project validation.Script Get-CitrixVMTools.ps1 should be valid PowerShell" time="0.4579" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-CitrixWorkspaceApp.ps1 should be valid PowerShell" name="General project validation.Script Get-CitrixWorkspaceApp.ps1 should be valid PowerShell" time="0.6426" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-CodelerityApacheNetBeans.ps1 should be valid PowerShell" name="General project validation.Script Get-CodelerityApacheNetBeans.ps1 should be valid PowerShell" time="0.2609" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-ConnectionExperienceIndicator.ps1 should be valid PowerShell" name="General project validation.Script Get-ConnectionExperienceIndicator.ps1 should be valid PowerShell" time="0.2013" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-ControlUpAgent.ps1 should be valid PowerShell" name="General project validation.Script Get-ControlUpAgent.ps1 should be valid PowerShell" time="0.225" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-ControlUpConsole.ps1 should be valid PowerShell" name="General project validation.Script Get-ControlUpConsole.ps1 should be valid PowerShell" time="0.2127" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Cyberduck.ps1 should be valid PowerShell" name="General project validation.Script Get-Cyberduck.ps1 should be valid PowerShell" time="0.2165" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-dbeaver.ps1 should be valid PowerShell" name="General project validation.Script Get-dbeaver.ps1 should be valid PowerShell" time="0.2086" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-DebaucheeBarrier.ps1 should be valid PowerShell" name="General project validation.Script Get-DebaucheeBarrier.ps1 should be valid PowerShell" time="0.2102" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-deviceTRUST.ps1 should be valid PowerShell" name="General project validation.Script Get-deviceTRUST.ps1 should be valid PowerShell" time="0.2086" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-DevToys.ps1 should be valid PowerShell" name="General project validation.Script Get-DevToys.ps1 should be valid PowerShell" time="0.2251" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-diagrams.net.ps1 should be valid PowerShell" name="General project validation.Script Get-diagrams.net.ps1 should be valid PowerShell" time="0.205" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-dnGrep.ps1 should be valid PowerShell" name="General project validation.Script Get-dnGrep.ps1 should be valid PowerShell" time="0.2043" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-DockerDesktop.ps1 should be valid PowerShell" name="General project validation.Script Get-DockerDesktop.ps1 should be valid PowerShell" time="0.2109" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-EgnyteDesktopApp.ps1 should be valid PowerShell" name="General project validation.Script Get-EgnyteDesktopApp.ps1 should be valid PowerShell" time="0.2156" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-FileZilla.ps1 should be valid PowerShell" name="General project validation.Script Get-FileZilla.ps1 should be valid PowerShell" time="0.2111" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Fork.ps1 should be valid PowerShell" name="General project validation.Script Get-Fork.ps1 should be valid PowerShell" time="0.2273" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-FoxitPDFEditor.ps1 should be valid PowerShell" name="General project validation.Script Get-FoxitPDFEditor.ps1 should be valid PowerShell" time="0.2153" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-FoxitReader.ps1 should be valid PowerShell" name="General project validation.Script Get-FoxitReader.ps1 should be valid PowerShell" time="0.2136" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-FreedomScientificFusion.ps1 should be valid PowerShell" name="General project validation.Script Get-FreedomScientificFusion.ps1 should be valid PowerShell" time="0.225" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-FreedomScientificJAWS.ps1 should be valid PowerShell" name="General project validation.Script Get-FreedomScientificJAWS.ps1 should be valid PowerShell" time="0.2261" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-FreedomScientificZoomText.ps1 should be valid PowerShell" name="General project validation.Script Get-FreedomScientificZoomText.ps1 should be valid PowerShell" time="0.233" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-FreeFem.ps1 should be valid PowerShell" name="General project validation.Script Get-FreeFem.ps1 should be valid PowerShell" time="0.2138" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-GeekSoftwarePDF24Creator.ps1 should be valid PowerShell" name="General project validation.Script Get-GeekSoftwarePDF24Creator.ps1 should be valid PowerShell" time="0.223" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Gephi.ps1 should be valid PowerShell" name="General project validation.Script Get-Gephi.ps1 should be valid PowerShell" time="0.23" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-GhislerTotalCommander.ps1 should be valid PowerShell" name="General project validation.Script Get-GhislerTotalCommander.ps1 should be valid PowerShell" time="0.2079" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Gimp.ps1 should be valid PowerShell" name="General project validation.Script Get-Gimp.ps1 should be valid PowerShell" time="0.2124" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-GitForWindows.ps1 should be valid PowerShell" name="General project validation.Script Get-GitForWindows.ps1 should be valid PowerShell" time="0.2159" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-GitHubAtom.ps1 should be valid PowerShell" name="General project validation.Script Get-GitHubAtom.ps1 should be valid PowerShell" time="0.2336" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-GitHubRelease.ps1 should be valid PowerShell" name="General project validation.Script Get-GitHubRelease.ps1 should be valid PowerShell" time="0.2374" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-GoogleChrome.ps1 should be valid PowerShell" name="General project validation.Script Get-GoogleChrome.ps1 should be valid PowerShell" time="0.2131" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Gpg4win.ps1 should be valid PowerShell" name="General project validation.Script Get-Gpg4win.ps1 should be valid PowerShell" time="0.2085" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Greenshot.ps1 should be valid PowerShell" name="General project validation.Script Get-Greenshot.ps1 should be valid PowerShell" time="0.2168" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-gretl.ps1 should be valid PowerShell" name="General project validation.Script Get-gretl.ps1 should be valid PowerShell" time="0.2647" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Handbrake.ps1 should be valid PowerShell" name="General project validation.Script Get-Handbrake.ps1 should be valid PowerShell" time="0.2107" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-HashicorpBoundary.ps1 should be valid PowerShell" name="General project validation.Script Get-HashicorpBoundary.ps1 should be valid PowerShell" time="0.3054" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-HashicorpConsul.ps1 should be valid PowerShell" name="General project validation.Script Get-HashicorpConsul.ps1 should be valid PowerShell" time="0.2951" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-HashicorpNomad.ps1 should be valid PowerShell" name="General project validation.Script Get-HashicorpNomad.ps1 should be valid PowerShell" time="0.2086" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-HashicorpPacker.ps1 should be valid PowerShell" name="General project validation.Script Get-HashicorpPacker.ps1 should be valid PowerShell" time="0.202" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-HashicorpTerraform.ps1 should be valid PowerShell" name="General project validation.Script Get-HashicorpTerraform.ps1 should be valid PowerShell" time="0.238" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-HashicorpVault.ps1 should be valid PowerShell" name="General project validation.Script Get-HashicorpVault.ps1 should be valid PowerShell" time="0.2969" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-HashicorpWaypoint.ps1 should be valid PowerShell" name="General project validation.Script Get-HashicorpWaypoint.ps1 should be valid PowerShell" time="0.2541" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-ImageGlass.ps1 should be valid PowerShell" name="General project validation.Script Get-ImageGlass.ps1 should be valid PowerShell" time="0.2814" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-ImageMagickStudioImageMagick.ps1 should be valid PowerShell" name="General project validation.Script Get-ImageMagickStudioImageMagick.ps1 should be valid PowerShell" time="0.2889" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-JamTreeSizeFree.ps1 should be valid PowerShell" name="General project validation.Script Get-JamTreeSizeFree.ps1 should be valid PowerShell" time="0.303" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-JamTreeSizeProfessional.ps1 should be valid PowerShell" name="General project validation.Script Get-JamTreeSizeProfessional.ps1 should be valid PowerShell" time="0.2849" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-JASP.ps1 should be valid PowerShell" name="General project validation.Script Get-JASP.ps1 should be valid PowerShell" time="0.29" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-JeremyMainGPUProfiler.ps1 should be valid PowerShell" name="General project validation.Script Get-JeremyMainGPUProfiler.ps1 should be valid PowerShell" time="0.2854" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-JetBrainsIntelliJIDEA.ps1 should be valid PowerShell" name="General project validation.Script Get-JetBrainsIntelliJIDEA.ps1 should be valid PowerShell" time="0.3092" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-JetBrainsPyCharm.ps1 should be valid PowerShell" name="General project validation.Script Get-JetBrainsPyCharm.ps1 should be valid PowerShell" time="0.3176" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-jq.ps1 should be valid PowerShell" name="General project validation.Script Get-jq.ps1 should be valid PowerShell" time="0.3066" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-jrsoftwareInnoSetup.ps1 should be valid PowerShell" name="General project validation.Script Get-jrsoftwareInnoSetup.ps1 should be valid PowerShell" time="0.2884" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-KarakunOpenWebStart.ps1 should be valid PowerShell" name="General project validation.Script Get-KarakunOpenWebStart.ps1 should be valid PowerShell" time="0.3035" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-KeePass.ps1 should be valid PowerShell" name="General project validation.Script Get-KeePass.ps1 should be valid PowerShell" time="0.3175" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-KeePassXCTeamKeePassXC.ps1 should be valid PowerShell" name="General project validation.Script Get-KeePassXCTeamKeePassXC.ps1 should be valid PowerShell" time="0.3056" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-LogMeInGoToMeeting.ps1 should be valid PowerShell" name="General project validation.Script Get-LogMeInGoToMeeting.ps1 should be valid PowerShell" time="0.2946" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-LogMeInGoToOpener.ps1 should be valid PowerShell" name="General project validation.Script Get-LogMeInGoToOpener.ps1 should be valid PowerShell" time="0.2686" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MasterPackager.ps1 should be valid PowerShell" name="General project validation.Script Get-MasterPackager.ps1 should be valid PowerShell" time="0.2799" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MattermostDesktop.ps1 should be valid PowerShell" name="General project validation.Script Get-MattermostDesktop.ps1 should be valid PowerShell" time="0.2876" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-McNeelRhino.ps1 should be valid PowerShell" name="General project validation.Script Get-McNeelRhino.ps1 should be valid PowerShell" time="0.2673" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MendeleyDesktop.ps1 should be valid PowerShell" name="General project validation.Script Get-MendeleyDesktop.ps1 should be valid PowerShell" time="0.2668" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MestrelabMnova.ps1 should be valid PowerShell" name="General project validation.Script Get-MestrelabMnova.ps1 should be valid PowerShell" time="0.2882" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Microsoft.NET.ps1 should be valid PowerShell" name="General project validation.Script Get-Microsoft.NET.ps1 should be valid PowerShell" time="0.3218" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Microsoft365Apps.ps1 should be valid PowerShell" name="General project validation.Script Get-Microsoft365Apps.ps1 should be valid PowerShell" time="0.3182" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MicrosoftAzureDataStudio.ps1 should be valid PowerShell" name="General project validation.Script Get-MicrosoftAzureDataStudio.ps1 should be valid PowerShell" time="0.2974" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MicrosoftAzureFunctionsCoreTools.ps1 should be valid PowerShell" name="General project validation.Script Get-MicrosoftAzureFunctionsCoreTools.ps1 should be valid PowerShell" time="0.2955" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MicrosoftAzureStorageExplorer.ps1 should be valid PowerShell" name="General project validation.Script Get-MicrosoftAzureStorageExplorer.ps1 should be valid PowerShell" time="0.288" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MicrosoftBicep.ps1 should be valid PowerShell" name="General project validation.Script Get-MicrosoftBicep.ps1 should be valid PowerShell" time="0.3029" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MicrosoftBotFrameworkEmulator.ps1 should be valid PowerShell" name="General project validation.Script Get-MicrosoftBotFrameworkEmulator.ps1 should be valid PowerShell" time="0.3121" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MicrosoftEdge.ps1 should be valid PowerShell" name="General project validation.Script Get-MicrosoftEdge.ps1 should be valid PowerShell" time="0.3144" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MicrosoftEdgeDriver.ps1 should be valid PowerShell" name="General project validation.Script Get-MicrosoftEdgeDriver.ps1 should be valid PowerShell" time="0.2979" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MicrosoftEdgeWebView2Runtime.ps1 should be valid PowerShell" name="General project validation.Script Get-MicrosoftEdgeWebView2Runtime.ps1 should be valid PowerShell" time="0.3101" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MicrosoftFSLogixApps.ps1 should be valid PowerShell" name="General project validation.Script Get-MicrosoftFSLogixApps.ps1 should be valid PowerShell" time="0.3004" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MicrosoftOneDrive.ps1 should be valid PowerShell" name="General project validation.Script Get-MicrosoftOneDrive.ps1 should be valid PowerShell" time="0.3071" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MicrosoftPowerShell.ps1 should be valid PowerShell" name="General project validation.Script Get-MicrosoftPowerShell.ps1 should be valid PowerShell" time="0.3029" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MicrosoftPowerToys.ps1 should be valid PowerShell" name="General project validation.Script Get-MicrosoftPowerToys.ps1 should be valid PowerShell" time="0.3184" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MicrosoftSsms.ps1 should be valid PowerShell" name="General project validation.Script Get-MicrosoftSsms.ps1 should be valid PowerShell" time="0.3393" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MicrosoftTeams.ps1 should be valid PowerShell" name="General project validation.Script Get-MicrosoftTeams.ps1 should be valid PowerShell" time="0.3153" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MicrosoftVisualStudio.ps1 should be valid PowerShell" name="General project validation.Script Get-MicrosoftVisualStudio.ps1 should be valid PowerShell" time="0.325" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MicrosoftVisualStudioCode.ps1 should be valid PowerShell" name="General project validation.Script Get-MicrosoftVisualStudioCode.ps1 should be valid PowerShell" time="0.316" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MicrosoftWindowsPackageManagerClient.ps1 should be valid PowerShell" name="General project validation.Script Get-MicrosoftWindowsPackageManagerClient.ps1 should be valid PowerShell" time="0.3088" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MicrosoftWvdBootloader.ps1 should be valid PowerShell" name="General project validation.Script Get-MicrosoftWvdBootloader.ps1 should be valid PowerShell" time="0.2952" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MicrosoftWvdInfraAgent.ps1 should be valid PowerShell" name="General project validation.Script Get-MicrosoftWvdInfraAgent.ps1 should be valid PowerShell" time="0.3198" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MicrosoftWvdMultimediaRedirection.ps1 should be valid PowerShell" name="General project validation.Script Get-MicrosoftWvdMultimediaRedirection.ps1 should be valid PowerShell" time="0.3023" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MicrosoftWvdRemoteDesktop.ps1 should be valid PowerShell" name="General project validation.Script Get-MicrosoftWvdRemoteDesktop.ps1 should be valid PowerShell" time="0.3164" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MicrosoftWvdRtcService.ps1 should be valid PowerShell" name="General project validation.Script Get-MicrosoftWvdRtcService.ps1 should be valid PowerShell" time="0.3245" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Miniconda.ps1 should be valid PowerShell" name="General project validation.Script Get-Miniconda.ps1 should be valid PowerShell" time="0.3115" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Minitab.ps1 should be valid PowerShell" name="General project validation.Script Get-Minitab.ps1 should be valid PowerShell" time="0.3078" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MiniZincIDE.ps1 should be valid PowerShell" name="General project validation.Script Get-MiniZincIDE.ps1 should be valid PowerShell" time="0.333" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MirantisLens.ps1 should be valid PowerShell" name="General project validation.Script Get-MirantisLens.ps1 should be valid PowerShell" time="0.311" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MozillaFirefox.ps1 should be valid PowerShell" name="General project validation.Script Get-MozillaFirefox.ps1 should be valid PowerShell" time="0.3085" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MozillaThunderbird.ps1 should be valid PowerShell" name="General project validation.Script Get-MozillaThunderbird.ps1 should be valid PowerShell" time="0.3027" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-mRemoteNG.ps1 should be valid PowerShell" name="General project validation.Script Get-mRemoteNG.ps1 should be valid PowerShell" time="0.3163" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MuseScore.ps1 should be valid PowerShell" name="General project validation.Script Get-MuseScore.ps1 should be valid PowerShell" time="0.3047" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Naps2.ps1 should be valid PowerShell" name="General project validation.Script Get-Naps2.ps1 should be valid PowerShell" time="0.3174" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-NETworkManager.ps1 should be valid PowerShell" name="General project validation.Script Get-NETworkManager.ps1 should be valid PowerShell" time="0.3219" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-NevcairielLAVFilters.ps1 should be valid PowerShell" name="General project validation.Script Get-NevcairielLAVFilters.ps1 should be valid PowerShell" time="0.3077" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Nomacs.ps1 should be valid PowerShell" name="General project validation.Script Get-Nomacs.ps1 should be valid PowerShell" time="0.3131" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Notable.ps1 should be valid PowerShell" name="General project validation.Script Get-Notable.ps1 should be valid PowerShell" time="0.3102" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-NotepadPlusPlus.ps1 should be valid PowerShell" name="General project validation.Script Get-NotepadPlusPlus.ps1 should be valid PowerShell" time="0.3338" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Obsidian.ps1 should be valid PowerShell" name="General project validation.Script Get-Obsidian.ps1 should be valid PowerShell" time="0.3124" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-OBSStudio.ps1 should be valid PowerShell" name="General project validation.Script Get-OBSStudio.ps1 should be valid PowerShell" time="0.3037" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-OctopusDeployServer.ps1 should be valid PowerShell" name="General project validation.Script Get-OctopusDeployServer.ps1 should be valid PowerShell" time="0.3168" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-OctopusTentacle.ps1 should be valid PowerShell" name="General project validation.Script Get-OctopusTentacle.ps1 should be valid PowerShell" time="0.3141" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-OpenJDK.ps1 should be valid PowerShell" name="General project validation.Script Get-OpenJDK.ps1 should be valid PowerShell" time="0.3086" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-OpenShellMenu.ps1 should be valid PowerShell" name="General project validation.Script Get-OpenShellMenu.ps1 should be valid PowerShell" time="0.3098" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-OpenWebStart.ps1 should be valid PowerShell" name="General project validation.Script Get-OpenWebStart.ps1 should be valid PowerShell" time="0.2992" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-OperaBrowser.ps1 should be valid PowerShell" name="General project validation.Script Get-OperaBrowser.ps1 should be valid PowerShell" time="0.2931" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-OperaGXBrowser.ps1 should be valid PowerShell" name="General project validation.Script Get-OperaGXBrowser.ps1 should be valid PowerShell" time="0.3131" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-OracleJava8.ps1 should be valid PowerShell" name="General project validation.Script Get-OracleJava8.ps1 should be valid PowerShell" time="0.3241" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-OracleVirtualBox.ps1 should be valid PowerShell" name="General project validation.Script Get-OracleVirtualBox.ps1 should be valid PowerShell" time="0.3091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-PaintDotNet.ps1 should be valid PowerShell" name="General project validation.Script Get-PaintDotNet.ps1 should be valid PowerShell" time="0.3211" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-PaintDotNetOfflineInstaller.ps1 should be valid PowerShell" name="General project validation.Script Get-PaintDotNetOfflineInstaller.ps1 should be valid PowerShell" time="0.3239" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Pandoc.ps1 should be valid PowerShell" name="General project validation.Script Get-Pandoc.ps1 should be valid PowerShell" time="0.3184" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-PDFForgePDFCreator.ps1 should be valid PowerShell" name="General project validation.Script Get-PDFForgePDFCreator.ps1 should be valid PowerShell" time="0.2975" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-PeaZipPeaZip.ps1 should be valid PowerShell" name="General project validation.Script Get-PeaZipPeaZip.ps1 should be valid PowerShell" time="0.3153" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Postman.ps1 should be valid PowerShell" name="General project validation.Script Get-Postman.ps1 should be valid PowerShell" time="0.2999" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Praat.ps1 should be valid PowerShell" name="General project validation.Script Get-Praat.ps1 should be valid PowerShell" time="0.302" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-ProjectLibre.ps1 should be valid PowerShell" name="General project validation.Script Get-ProjectLibre.ps1 should be valid PowerShell" time="0.2874" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Protege.ps1 should be valid PowerShell" name="General project validation.Script Get-Protege.ps1 should be valid PowerShell" time="0.2968" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-PSAppDeployToolkit.ps1 should be valid PowerShell" name="General project validation.Script Get-PSAppDeployToolkit.ps1 should be valid PowerShell" time="0.3021" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-PSFPython.ps1 should be valid PowerShell" name="General project validation.Script Get-PSFPython.ps1 should be valid PowerShell" time="0.2987" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-PuTTY.ps1 should be valid PowerShell" name="General project validation.Script Get-PuTTY.ps1 should be valid PowerShell" time="0.2852" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-RCoreTeamRforWindows.ps1 should be valid PowerShell" name="General project validation.Script Get-RCoreTeamRforWindows.ps1 should be valid PowerShell" time="0.2898" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-RDAnalyzer.ps1 should be valid PowerShell" name="General project validation.Script Get-RDAnalyzer.ps1 should be valid PowerShell" time="0.2896" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-RingCentral.ps1 should be valid PowerShell" name="General project validation.Script Get-RingCentral.ps1 should be valid PowerShell" time="0.2826" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-RStudio.ps1 should be valid PowerShell" name="General project validation.Script Get-RStudio.ps1 should be valid PowerShell" time="0.2901" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-SafeExamBrowser.ps1 should be valid PowerShell" name="General project validation.Script Get-SafeExamBrowser.ps1 should be valid PowerShell" time="0.2927" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-SAGAGIS.ps1 should be valid PowerShell" name="General project validation.Script Get-SAGAGIS.ps1 should be valid PowerShell" time="0.2959" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-ScooterBeyondCompare.ps1 should be valid PowerShell" name="General project validation.Script Get-ScooterBeyondCompare.ps1 should be valid PowerShell" time="0.3006" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Scratch.ps1 should be valid PowerShell" name="General project validation.Script Get-Scratch.ps1 should be valid PowerShell" time="0.3002" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-ScreenToGif.ps1 should be valid PowerShell" name="General project validation.Script Get-ScreenToGif.ps1 should be valid PowerShell" time="0.3113" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-ShareX.ps1 should be valid PowerShell" name="General project validation.Script Get-ShareX.ps1 should be valid PowerShell" time="0.2996" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-SignalDesktop.ps1 should be valid PowerShell" name="General project validation.Script Get-SignalDesktop.ps1 should be valid PowerShell" time="0.314" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Slack.ps1 should be valid PowerShell" name="General project validation.Script Get-Slack.ps1 should be valid PowerShell" time="0.2885" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-SmartBearSoapUI.ps1 should be valid PowerShell" name="General project validation.Script Get-SmartBearSoapUI.ps1 should be valid PowerShell" time="0.3012" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-stealthpuppyWindowsCustomisedDefaults.ps1 should be valid PowerShell" name="General project validation.Script Get-stealthpuppyWindowsCustomisedDefaults.ps1 should be valid PowerShell" time="0.3146" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-StefansToolsgregpWin.ps1 should be valid PowerShell" name="General project validation.Script Get-StefansToolsgregpWin.ps1 should be valid PowerShell" time="0.3137" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-SumatraPDFReader.ps1 should be valid PowerShell" name="General project validation.Script Get-SumatraPDFReader.ps1 should be valid PowerShell" time="0.2965" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-TableauDesktop.ps1 should be valid PowerShell" name="General project validation.Script Get-TableauDesktop.ps1 should be valid PowerShell" time="0.3005" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-TableauPrep.ps1 should be valid PowerShell" name="General project validation.Script Get-TableauPrep.ps1 should be valid PowerShell" time="0.287" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-TableauReader.ps1 should be valid PowerShell" name="General project validation.Script Get-TableauReader.ps1 should be valid PowerShell" time="0.2983" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-TeamViewer.ps1 should be valid PowerShell" name="General project validation.Script Get-TeamViewer.ps1 should be valid PowerShell" time="0.287" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-TechSmithCamtasia.ps1 should be valid PowerShell" name="General project validation.Script Get-TechSmithCamtasia.ps1 should be valid PowerShell" time="0.2857" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-TechSmithSnagit.ps1 should be valid PowerShell" name="General project validation.Script Get-TechSmithSnagit.ps1 should be valid PowerShell" time="0.2904" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-TelegramDesktop.ps1 should be valid PowerShell" name="General project validation.Script Get-TelegramDesktop.ps1 should be valid PowerShell" time="0.29" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-TelerikFiddlerClassic.ps1 should be valid PowerShell" name="General project validation.Script Get-TelerikFiddlerClassic.ps1 should be valid PowerShell" time="0.283" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-TelerikFiddlerEverywhere.ps1 should be valid PowerShell" name="General project validation.Script Get-TelerikFiddlerEverywhere.ps1 should be valid PowerShell" time="0.2859" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Terminals.ps1 should be valid PowerShell" name="General project validation.Script Get-Terminals.ps1 should be valid PowerShell" time="0.2937" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-TeXstudio.ps1 should be valid PowerShell" name="General project validation.Script Get-TeXstudio.ps1 should be valid PowerShell" time="0.3081" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-TogglDesktop.ps1 should be valid PowerShell" name="General project validation.Script Get-TogglDesktop.ps1 should be valid PowerShell" time="0.3017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-TorProjectTorBrowser.ps1 should be valid PowerShell" name="General project validation.Script Get-TorProjectTorBrowser.ps1 should be valid PowerShell" time="0.2969" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Tower.ps1 should be valid PowerShell" name="General project validation.Script Get-Tower.ps1 should be valid PowerShell" time="0.3124" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-TrackerSoftwarePDFXChangeEditor.ps1 should be valid PowerShell" name="General project validation.Script Get-TrackerSoftwarePDFXChangeEditor.ps1 should be valid PowerShell" time="0.3206" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-USBPcap.ps1 should be valid PowerShell" name="General project validation.Script Get-USBPcap.ps1 should be valid PowerShell" time="0.3145" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-VastLimitsUberAgent.ps1 should be valid PowerShell" name="General project validation.Script Get-VastLimitsUberAgent.ps1 should be valid PowerShell" time="0.3572" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-VeraCrypt.ps1 should be valid PowerShell" name="General project validation.Script Get-VeraCrypt.ps1 should be valid PowerShell" time="0.3182" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-VercelHyper.ps1 should be valid PowerShell" name="General project validation.Script Get-VercelHyper.ps1 should be valid PowerShell" time="0.3095" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-VideoLanVlcPlayer.ps1 should be valid PowerShell" name="General project validation.Script Get-VideoLanVlcPlayer.ps1 should be valid PowerShell" time="0.3095" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-VisualCppRedistAIO.ps1 should be valid PowerShell" name="General project validation.Script Get-VisualCppRedistAIO.ps1 should be valid PowerShell" time="0.3231" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-VMwareHorizonClient.ps1 should be valid PowerShell" name="General project validation.Script Get-VMwareHorizonClient.ps1 should be valid PowerShell" time="0.3195" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-VMwareHorizonClientAlt.ps1 should be valid PowerShell" name="General project validation.Script Get-VMwareHorizonClientAlt.ps1 should be valid PowerShell" time="0.3505" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-VMwareOSOptimizationTool.ps1 should be valid PowerShell" name="General project validation.Script Get-VMwareOSOptimizationTool.ps1 should be valid PowerShell" time="0.3246" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-VMwareTools.ps1 should be valid PowerShell" name="General project validation.Script Get-VMwareTools.ps1 should be valid PowerShell" time="0.3188" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-VMwareWorkstationPlayer.ps1 should be valid PowerShell" name="General project validation.Script Get-VMwareWorkstationPlayer.ps1 should be valid PowerShell" time="0.2942" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-VMwareWorkstationPro.ps1 should be valid PowerShell" name="General project validation.Script Get-VMwareWorkstationPro.ps1 should be valid PowerShell" time="0.3173" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-voidtoolsEverything.ps1 should be valid PowerShell" name="General project validation.Script Get-voidtoolsEverything.ps1 should be valid PowerShell" time="0.3125" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Win32OpenSSH.ps1 should be valid PowerShell" name="General project validation.Script Get-Win32OpenSSH.ps1 should be valid PowerShell" time="0.2953" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-WinMerge.ps1 should be valid PowerShell" name="General project validation.Script Get-WinMerge.ps1 should be valid PowerShell" time="0.3126" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-WinSCP.ps1 should be valid PowerShell" name="General project validation.Script Get-WinSCP.ps1 should be valid PowerShell" time="0.3465" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Wireshark.ps1 should be valid PowerShell" name="General project validation.Script Get-Wireshark.ps1 should be valid PowerShell" time="0.3068" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-WixToolset.ps1 should be valid PowerShell" name="General project validation.Script Get-WixToolset.ps1 should be valid PowerShell" time="0.3061" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Zoom.ps1 should be valid PowerShell" name="General project validation.Script Get-Zoom.ps1 should be valid PowerShell" time="0.3068" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Zotero.ps1 should be valid PowerShell" name="General project validation.Script Get-Zotero.ps1 should be valid PowerShell" time="0.3154" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script ConvertTo-DateTime.ps1 should be valid PowerShell" name="General project validation.Script ConvertTo-DateTime.ps1 should be valid PowerShell" time="0.3001" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script ConvertTo-Hashtable.ps1 should be valid PowerShell" name="General project validation.Script ConvertTo-Hashtable.ps1 should be valid PowerShell" time="0.2916" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Expand-GzipArchive.ps1 should be valid PowerShell" name="General project validation.Script Expand-GzipArchive.ps1 should be valid PowerShell" time="0.2959" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Architecture.ps1 should be valid PowerShell" name="General project validation.Script Get-Architecture.ps1 should be valid PowerShell" time="0.3214" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-FileType.ps1 should be valid PowerShell" name="General project validation.Script Get-FileType.ps1 should be valid PowerShell" time="0.312" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-FunctionResource.ps1 should be valid PowerShell" name="General project validation.Script Get-FunctionResource.ps1 should be valid PowerShell" time="0.3128" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-GitHubRepoRelease.ps1 should be valid PowerShell" name="General project validation.Script Get-GitHubRepoRelease.ps1 should be valid PowerShell" time="0.3139" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-ModuleResource.ps1 should be valid PowerShell" name="General project validation.Script Get-ModuleResource.ps1 should be valid PowerShell" time="0.323" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Platform.ps1 should be valid PowerShell" name="General project validation.Script Get-Platform.ps1 should be valid PowerShell" time="0.3026" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-SourceForgeRepoRelease.ps1 should be valid PowerShell" name="General project validation.Script Get-SourceForgeRepoRelease.ps1 should be valid PowerShell" time="0.3031" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Invoke-RestMethodWrapper.ps1 should be valid PowerShell" name="General project validation.Script Invoke-RestMethodWrapper.ps1 should be valid PowerShell" time="0.3186" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Invoke-SystemNetRequest.ps1 should be valid PowerShell" name="General project validation.Script Invoke-SystemNetRequest.ps1 should be valid PowerShell" time="0.3136" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Invoke-WebRequestWrapper.ps1 should be valid PowerShell" name="General project validation.Script Invoke-WebRequestWrapper.ps1 should be valid PowerShell" time="0.3197" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script New-EvergreenPath.ps1 should be valid PowerShell" name="General project validation.Script New-EvergreenPath.ps1 should be valid PowerShell" time="0.3072" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Resolve-DnsNameWrapper.ps1 should be valid PowerShell" name="General project validation.Script Resolve-DnsNameWrapper.ps1 should be valid PowerShell" time="0.315" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Resolve-InvokeWebRequest.ps1 should be valid PowerShell" name="General project validation.Script Resolve-InvokeWebRequest.ps1 should be valid PowerShell" time="0.3018" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Resolve-SystemNetWebRequest.ps1 should be valid PowerShell" name="General project validation.Script Resolve-SystemNetWebRequest.ps1 should be valid PowerShell" time="0.3017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Save-File.ps1 should be valid PowerShell" name="General project validation.Script Save-File.ps1 should be valid PowerShell" time="0.3197" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Test-PSCore.ps1 should be valid PowerShell" name="General project validation.Script Test-PSCore.ps1 should be valid PowerShell" time="0.2958" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Export-EvergreenApp.ps1 should be valid PowerShell" name="General project validation.Script Export-EvergreenApp.ps1 should be valid PowerShell" time="0.293" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Export-EvergreenManifest.ps1 should be valid PowerShell" name="General project validation.Script Export-EvergreenManifest.ps1 should be valid PowerShell" time="0.301" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Find-EvergreenApp.ps1 should be valid PowerShell" name="General project validation.Script Find-EvergreenApp.ps1 should be valid PowerShell" time="0.3395" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-EvergreenApp.ps1 should be valid PowerShell" name="General project validation.Script Get-EvergreenApp.ps1 should be valid PowerShell" time="0.2991" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-EvergreenLibrary.ps1 should be valid PowerShell" name="General project validation.Script Get-EvergreenLibrary.ps1 should be valid PowerShell" time="0.3035" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Invoke-EvergreenApp.ps1 should be valid PowerShell" name="General project validation.Script Invoke-EvergreenApp.ps1 should be valid PowerShell" time="0.3182" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Invoke-EvergreenLibraryUpdate.ps1 should be valid PowerShell" name="General project validation.Script Invoke-EvergreenLibraryUpdate.ps1 should be valid PowerShell" time="0.3144" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script New-EvergreenLibrary.ps1 should be valid PowerShell" name="General project validation.Script New-EvergreenLibrary.ps1 should be valid PowerShell" time="0.2688" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Save-EvergreenApp.ps1 should be valid PowerShell" name="General project validation.Script Save-EvergreenApp.ps1 should be valid PowerShell" time="0.2064" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Test-EvergreenApp.ps1 should be valid PowerShell" name="General project validation.Script Test-EvergreenApp.ps1 should be valid PowerShell" time="0.2303" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Module Function validation" executed="True" result="Success" success="True" time="199.1716" asserts="0" description="Module Function validation">
            <results>
              <test-suite type="ParameterizedTest" name="Module Function validation.Script &lt;file.Name&gt; should only contain one function" executed="True" result="Success" success="True" time="63.1191" asserts="0" description="Script &lt;file.Name&gt; should only contain one function">
                <results>
                  <test-case description="Script Get-1Password.ps1 should only contain one function" name="Module Function validation.Script Get-1Password.ps1 should only contain one function" time="0.2914" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-1Password7.ps1 should only contain one function" name="Module Function validation.Script Get-1Password7.ps1 should only contain one function" time="0.2568" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-7zip.ps1 should only contain one function" name="Module Function validation.Script Get-7zip.ps1 should only contain one function" time="0.2553" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-7ZipZS.ps1 should only contain one function" name="Module Function validation.Script Get-7ZipZS.ps1 should only contain one function" time="0.2568" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-AdobeAcrobat.ps1 should only contain one function" name="Module Function validation.Script Get-AdobeAcrobat.ps1 should only contain one function" time="0.2451" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-AdobeAcrobatDC.ps1 should only contain one function" name="Module Function validation.Script Get-AdobeAcrobatDC.ps1 should only contain one function" time="0.4219" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-AdobeAcrobatProStdDC.ps1 should only contain one function" name="Module Function validation.Script Get-AdobeAcrobatProStdDC.ps1 should only contain one function" time="0.3673" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-AdobeAcrobatReaderDC.ps1 should only contain one function" name="Module Function validation.Script Get-AdobeAcrobatReaderDC.ps1 should only contain one function" time="0.3689" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-AdobeBrackets.ps1 should only contain one function" name="Module Function validation.Script Get-AdobeBrackets.ps1 should only contain one function" time="0.3564" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-AdoptiumTemurin11.ps1 should only contain one function" name="Module Function validation.Script Get-AdoptiumTemurin11.ps1 should only contain one function" time="0.384" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-AdoptiumTemurin16.ps1 should only contain one function" name="Module Function validation.Script Get-AdoptiumTemurin16.ps1 should only contain one function" time="0.387" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-AdoptiumTemurin17.ps1 should only contain one function" name="Module Function validation.Script Get-AdoptiumTemurin17.ps1 should only contain one function" time="0.3941" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-AdoptiumTemurin18.ps1 should only contain one function" name="Module Function validation.Script Get-AdoptiumTemurin18.ps1 should only contain one function" time="0.2934" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-AdoptiumTemurin8.ps1 should only contain one function" name="Module Function validation.Script Get-AdoptiumTemurin8.ps1 should only contain one function" time="0.2591" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-AdoptOpenJDK11.ps1 should only contain one function" name="Module Function validation.Script Get-AdoptOpenJDK11.ps1 should only contain one function" time="0.2545" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-AdoptOpenJDK16.ps1 should only contain one function" name="Module Function validation.Script Get-AdoptOpenJDK16.ps1 should only contain one function" time="0.2405" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-AdoptOpenJDK8.ps1 should only contain one function" name="Module Function validation.Script Get-AdoptOpenJDK8.ps1 should only contain one function" time="0.2417" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-AkeoRufus.ps1 should only contain one function" name="Module Function validation.Script Get-AkeoRufus.ps1 should only contain one function" time="0.245" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-AmazonCorretto.ps1 should only contain one function" name="Module Function validation.Script Get-AmazonCorretto.ps1 should only contain one function" time="0.2414" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Anaconda.ps1 should only contain one function" name="Module Function validation.Script Get-Anaconda.ps1 should only contain one function" time="0.2488" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Anki.ps1 should only contain one function" name="Module Function validation.Script Get-Anki.ps1 should only contain one function" time="0.2684" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-AppVentiX.ps1 should only contain one function" name="Module Function validation.Script Get-AppVentiX.ps1 should only contain one function" time="0.2894" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-ArtifexGhostscript.ps1 should only contain one function" name="Module Function validation.Script Get-ArtifexGhostscript.ps1 should only contain one function" time="0.2592" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-AtlassianSourcetree.ps1 should only contain one function" name="Module Function validation.Script Get-AtlassianSourcetree.ps1 should only contain one function" time="0.2536" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Audacity.ps1 should only contain one function" name="Module Function validation.Script Get-Audacity.ps1 should only contain one function" time="0.2544" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-AutoDarkMode.ps1 should only contain one function" name="Module Function validation.Script Get-AutoDarkMode.ps1 should only contain one function" time="0.2454" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-BeekeeperStudio.ps1 should only contain one function" name="Module Function validation.Script Get-BeekeeperStudio.ps1 should only contain one function" time="0.2399" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-BISF.ps1 should only contain one function" name="Module Function validation.Script Get-BISF.ps1 should only contain one function" time="0.2444" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-BitwardenDesktop.ps1 should only contain one function" name="Module Function validation.Script Get-BitwardenDesktop.ps1 should only contain one function" time="0.2477" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-BlenderLauncher.ps1 should only contain one function" name="Module Function validation.Script Get-BlenderLauncher.ps1 should only contain one function" time="0.2521" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-BlueJ.ps1 should only contain one function" name="Module Function validation.Script Get-BlueJ.ps1 should only contain one function" time="0.2702" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-CendioThinLinc.ps1 should only contain one function" name="Module Function validation.Script Get-CendioThinLinc.ps1 should only contain one function" time="0.2624" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-CitrixVMTools.ps1 should only contain one function" name="Module Function validation.Script Get-CitrixVMTools.ps1 should only contain one function" time="0.2833" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-CitrixWorkspaceApp.ps1 should only contain one function" name="Module Function validation.Script Get-CitrixWorkspaceApp.ps1 should only contain one function" time="0.2646" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-CodelerityApacheNetBeans.ps1 should only contain one function" name="Module Function validation.Script Get-CodelerityApacheNetBeans.ps1 should only contain one function" time="0.2574" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-ConnectionExperienceIndicator.ps1 should only contain one function" name="Module Function validation.Script Get-ConnectionExperienceIndicator.ps1 should only contain one function" time="0.3082" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-ControlUpAgent.ps1 should only contain one function" name="Module Function validation.Script Get-ControlUpAgent.ps1 should only contain one function" time="0.2428" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-ControlUpConsole.ps1 should only contain one function" name="Module Function validation.Script Get-ControlUpConsole.ps1 should only contain one function" time="0.2474" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Cyberduck.ps1 should only contain one function" name="Module Function validation.Script Get-Cyberduck.ps1 should only contain one function" time="0.2493" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-dbeaver.ps1 should only contain one function" name="Module Function validation.Script Get-dbeaver.ps1 should only contain one function" time="0.2521" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-DebaucheeBarrier.ps1 should only contain one function" name="Module Function validation.Script Get-DebaucheeBarrier.ps1 should only contain one function" time="0.2591" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-deviceTRUST.ps1 should only contain one function" name="Module Function validation.Script Get-deviceTRUST.ps1 should only contain one function" time="0.2642" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-DevToys.ps1 should only contain one function" name="Module Function validation.Script Get-DevToys.ps1 should only contain one function" time="0.2617" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-diagrams.net.ps1 should only contain one function" name="Module Function validation.Script Get-diagrams.net.ps1 should only contain one function" time="0.2553" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-dnGrep.ps1 should only contain one function" name="Module Function validation.Script Get-dnGrep.ps1 should only contain one function" time="0.2528" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-DockerDesktop.ps1 should only contain one function" name="Module Function validation.Script Get-DockerDesktop.ps1 should only contain one function" time="0.363" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-EgnyteDesktopApp.ps1 should only contain one function" name="Module Function validation.Script Get-EgnyteDesktopApp.ps1 should only contain one function" time="0.2657" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-FileZilla.ps1 should only contain one function" name="Module Function validation.Script Get-FileZilla.ps1 should only contain one function" time="0.2578" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Fork.ps1 should only contain one function" name="Module Function validation.Script Get-Fork.ps1 should only contain one function" time="0.2605" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-FoxitPDFEditor.ps1 should only contain one function" name="Module Function validation.Script Get-FoxitPDFEditor.ps1 should only contain one function" time="0.2583" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-FoxitReader.ps1 should only contain one function" name="Module Function validation.Script Get-FoxitReader.ps1 should only contain one function" time="0.2607" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-FreedomScientificFusion.ps1 should only contain one function" name="Module Function validation.Script Get-FreedomScientificFusion.ps1 should only contain one function" time="0.2654" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-FreedomScientificJAWS.ps1 should only contain one function" name="Module Function validation.Script Get-FreedomScientificJAWS.ps1 should only contain one function" time="0.2652" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-FreedomScientificZoomText.ps1 should only contain one function" name="Module Function validation.Script Get-FreedomScientificZoomText.ps1 should only contain one function" time="0.2521" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-FreeFem.ps1 should only contain one function" name="Module Function validation.Script Get-FreeFem.ps1 should only contain one function" time="0.2534" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-GeekSoftwarePDF24Creator.ps1 should only contain one function" name="Module Function validation.Script Get-GeekSoftwarePDF24Creator.ps1 should only contain one function" time="0.2548" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Gephi.ps1 should only contain one function" name="Module Function validation.Script Get-Gephi.ps1 should only contain one function" time="0.2603" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-GhislerTotalCommander.ps1 should only contain one function" name="Module Function validation.Script Get-GhislerTotalCommander.ps1 should only contain one function" time="0.226" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Gimp.ps1 should only contain one function" name="Module Function validation.Script Get-Gimp.ps1 should only contain one function" time="0.2626" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-GitForWindows.ps1 should only contain one function" name="Module Function validation.Script Get-GitForWindows.ps1 should only contain one function" time="0.2903" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-GitHubAtom.ps1 should only contain one function" name="Module Function validation.Script Get-GitHubAtom.ps1 should only contain one function" time="0.3087" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-GitHubRelease.ps1 should only contain one function" name="Module Function validation.Script Get-GitHubRelease.ps1 should only contain one function" time="0.3579" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-GoogleChrome.ps1 should only contain one function" name="Module Function validation.Script Get-GoogleChrome.ps1 should only contain one function" time="0.2651" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Gpg4win.ps1 should only contain one function" name="Module Function validation.Script Get-Gpg4win.ps1 should only contain one function" time="0.2514" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Greenshot.ps1 should only contain one function" name="Module Function validation.Script Get-Greenshot.ps1 should only contain one function" time="0.2502" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-gretl.ps1 should only contain one function" name="Module Function validation.Script Get-gretl.ps1 should only contain one function" time="0.2553" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Handbrake.ps1 should only contain one function" name="Module Function validation.Script Get-Handbrake.ps1 should only contain one function" time="0.2511" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-HashicorpBoundary.ps1 should only contain one function" name="Module Function validation.Script Get-HashicorpBoundary.ps1 should only contain one function" time="0.2552" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-HashicorpConsul.ps1 should only contain one function" name="Module Function validation.Script Get-HashicorpConsul.ps1 should only contain one function" time="0.269" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-HashicorpNomad.ps1 should only contain one function" name="Module Function validation.Script Get-HashicorpNomad.ps1 should only contain one function" time="0.2631" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-HashicorpPacker.ps1 should only contain one function" name="Module Function validation.Script Get-HashicorpPacker.ps1 should only contain one function" time="0.2668" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-HashicorpTerraform.ps1 should only contain one function" name="Module Function validation.Script Get-HashicorpTerraform.ps1 should only contain one function" time="0.2441" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-HashicorpVault.ps1 should only contain one function" name="Module Function validation.Script Get-HashicorpVault.ps1 should only contain one function" time="0.2404" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-HashicorpWaypoint.ps1 should only contain one function" name="Module Function validation.Script Get-HashicorpWaypoint.ps1 should only contain one function" time="0.2451" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-ImageGlass.ps1 should only contain one function" name="Module Function validation.Script Get-ImageGlass.ps1 should only contain one function" time="0.2628" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-ImageMagickStudioImageMagick.ps1 should only contain one function" name="Module Function validation.Script Get-ImageMagickStudioImageMagick.ps1 should only contain one function" time="0.2485" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-JamTreeSizeFree.ps1 should only contain one function" name="Module Function validation.Script Get-JamTreeSizeFree.ps1 should only contain one function" time="0.2452" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-JamTreeSizeProfessional.ps1 should only contain one function" name="Module Function validation.Script Get-JamTreeSizeProfessional.ps1 should only contain one function" time="0.2457" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-JASP.ps1 should only contain one function" name="Module Function validation.Script Get-JASP.ps1 should only contain one function" time="0.2644" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-JeremyMainGPUProfiler.ps1 should only contain one function" name="Module Function validation.Script Get-JeremyMainGPUProfiler.ps1 should only contain one function" time="0.2631" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-JetBrainsIntelliJIDEA.ps1 should only contain one function" name="Module Function validation.Script Get-JetBrainsIntelliJIDEA.ps1 should only contain one function" time="0.2766" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-JetBrainsPyCharm.ps1 should only contain one function" name="Module Function validation.Script Get-JetBrainsPyCharm.ps1 should only contain one function" time="0.2698" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-jq.ps1 should only contain one function" name="Module Function validation.Script Get-jq.ps1 should only contain one function" time="0.2683" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-jrsoftwareInnoSetup.ps1 should only contain one function" name="Module Function validation.Script Get-jrsoftwareInnoSetup.ps1 should only contain one function" time="0.249" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-KarakunOpenWebStart.ps1 should only contain one function" name="Module Function validation.Script Get-KarakunOpenWebStart.ps1 should only contain one function" time="0.2528" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-KeePass.ps1 should only contain one function" name="Module Function validation.Script Get-KeePass.ps1 should only contain one function" time="0.2706" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-KeePassXCTeamKeePassXC.ps1 should only contain one function" name="Module Function validation.Script Get-KeePassXCTeamKeePassXC.ps1 should only contain one function" time="0.2571" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-LogMeInGoToMeeting.ps1 should only contain one function" name="Module Function validation.Script Get-LogMeInGoToMeeting.ps1 should only contain one function" time="0.2452" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-LogMeInGoToOpener.ps1 should only contain one function" name="Module Function validation.Script Get-LogMeInGoToOpener.ps1 should only contain one function" time="0.2456" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MasterPackager.ps1 should only contain one function" name="Module Function validation.Script Get-MasterPackager.ps1 should only contain one function" time="0.2463" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MattermostDesktop.ps1 should only contain one function" name="Module Function validation.Script Get-MattermostDesktop.ps1 should only contain one function" time="0.4403" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-McNeelRhino.ps1 should only contain one function" name="Module Function validation.Script Get-McNeelRhino.ps1 should only contain one function" time="0.2499" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MendeleyDesktop.ps1 should only contain one function" name="Module Function validation.Script Get-MendeleyDesktop.ps1 should only contain one function" time="0.2366" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MestrelabMnova.ps1 should only contain one function" name="Module Function validation.Script Get-MestrelabMnova.ps1 should only contain one function" time="0.2417" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Microsoft.NET.ps1 should only contain one function" name="Module Function validation.Script Get-Microsoft.NET.ps1 should only contain one function" time="0.2573" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Microsoft365Apps.ps1 should only contain one function" name="Module Function validation.Script Get-Microsoft365Apps.ps1 should only contain one function" time="0.2808" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MicrosoftAzureDataStudio.ps1 should only contain one function" name="Module Function validation.Script Get-MicrosoftAzureDataStudio.ps1 should only contain one function" time="0.2387" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MicrosoftAzureFunctionsCoreTools.ps1 should only contain one function" name="Module Function validation.Script Get-MicrosoftAzureFunctionsCoreTools.ps1 should only contain one function" time="0.2452" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MicrosoftAzureStorageExplorer.ps1 should only contain one function" name="Module Function validation.Script Get-MicrosoftAzureStorageExplorer.ps1 should only contain one function" time="0.2376" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MicrosoftBicep.ps1 should only contain one function" name="Module Function validation.Script Get-MicrosoftBicep.ps1 should only contain one function" time="0.2402" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MicrosoftBotFrameworkEmulator.ps1 should only contain one function" name="Module Function validation.Script Get-MicrosoftBotFrameworkEmulator.ps1 should only contain one function" time="0.2414" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MicrosoftEdge.ps1 should only contain one function" name="Module Function validation.Script Get-MicrosoftEdge.ps1 should only contain one function" time="0.2422" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MicrosoftEdgeDriver.ps1 should only contain one function" name="Module Function validation.Script Get-MicrosoftEdgeDriver.ps1 should only contain one function" time="0.2405" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MicrosoftEdgeWebView2Runtime.ps1 should only contain one function" name="Module Function validation.Script Get-MicrosoftEdgeWebView2Runtime.ps1 should only contain one function" time="0.2409" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MicrosoftFSLogixApps.ps1 should only contain one function" name="Module Function validation.Script Get-MicrosoftFSLogixApps.ps1 should only contain one function" time="0.2527" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MicrosoftOneDrive.ps1 should only contain one function" name="Module Function validation.Script Get-MicrosoftOneDrive.ps1 should only contain one function" time="0.2404" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MicrosoftPowerShell.ps1 should only contain one function" name="Module Function validation.Script Get-MicrosoftPowerShell.ps1 should only contain one function" time="0.2396" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MicrosoftPowerToys.ps1 should only contain one function" name="Module Function validation.Script Get-MicrosoftPowerToys.ps1 should only contain one function" time="0.2472" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MicrosoftSsms.ps1 should only contain one function" name="Module Function validation.Script Get-MicrosoftSsms.ps1 should only contain one function" time="0.2418" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MicrosoftTeams.ps1 should only contain one function" name="Module Function validation.Script Get-MicrosoftTeams.ps1 should only contain one function" time="0.2455" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MicrosoftVisualStudio.ps1 should only contain one function" name="Module Function validation.Script Get-MicrosoftVisualStudio.ps1 should only contain one function" time="0.2385" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MicrosoftVisualStudioCode.ps1 should only contain one function" name="Module Function validation.Script Get-MicrosoftVisualStudioCode.ps1 should only contain one function" time="0.257" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MicrosoftWindowsPackageManagerClient.ps1 should only contain one function" name="Module Function validation.Script Get-MicrosoftWindowsPackageManagerClient.ps1 should only contain one function" time="0.2666" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MicrosoftWvdBootloader.ps1 should only contain one function" name="Module Function validation.Script Get-MicrosoftWvdBootloader.ps1 should only contain one function" time="0.2647" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MicrosoftWvdInfraAgent.ps1 should only contain one function" name="Module Function validation.Script Get-MicrosoftWvdInfraAgent.ps1 should only contain one function" time="0.2973" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MicrosoftWvdMultimediaRedirection.ps1 should only contain one function" name="Module Function validation.Script Get-MicrosoftWvdMultimediaRedirection.ps1 should only contain one function" time="0.2992" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MicrosoftWvdRemoteDesktop.ps1 should only contain one function" name="Module Function validation.Script Get-MicrosoftWvdRemoteDesktop.ps1 should only contain one function" time="0.3715" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MicrosoftWvdRtcService.ps1 should only contain one function" name="Module Function validation.Script Get-MicrosoftWvdRtcService.ps1 should only contain one function" time="0.255" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Miniconda.ps1 should only contain one function" name="Module Function validation.Script Get-Miniconda.ps1 should only contain one function" time="0.2605" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Minitab.ps1 should only contain one function" name="Module Function validation.Script Get-Minitab.ps1 should only contain one function" time="0.2894" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MiniZincIDE.ps1 should only contain one function" name="Module Function validation.Script Get-MiniZincIDE.ps1 should only contain one function" time="0.2578" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MirantisLens.ps1 should only contain one function" name="Module Function validation.Script Get-MirantisLens.ps1 should only contain one function" time="0.3935" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MozillaFirefox.ps1 should only contain one function" name="Module Function validation.Script Get-MozillaFirefox.ps1 should only contain one function" time="0.263" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MozillaThunderbird.ps1 should only contain one function" name="Module Function validation.Script Get-MozillaThunderbird.ps1 should only contain one function" time="0.2639" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-mRemoteNG.ps1 should only contain one function" name="Module Function validation.Script Get-mRemoteNG.ps1 should only contain one function" time="0.2767" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MuseScore.ps1 should only contain one function" name="Module Function validation.Script Get-MuseScore.ps1 should only contain one function" time="0.2587" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Naps2.ps1 should only contain one function" name="Module Function validation.Script Get-Naps2.ps1 should only contain one function" time="0.2647" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-NETworkManager.ps1 should only contain one function" name="Module Function validation.Script Get-NETworkManager.ps1 should only contain one function" time="0.2721" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-NevcairielLAVFilters.ps1 should only contain one function" name="Module Function validation.Script Get-NevcairielLAVFilters.ps1 should only contain one function" time="0.2844" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Nomacs.ps1 should only contain one function" name="Module Function validation.Script Get-Nomacs.ps1 should only contain one function" time="0.2702" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Notable.ps1 should only contain one function" name="Module Function validation.Script Get-Notable.ps1 should only contain one function" time="0.2626" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-NotepadPlusPlus.ps1 should only contain one function" name="Module Function validation.Script Get-NotepadPlusPlus.ps1 should only contain one function" time="0.2528" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Obsidian.ps1 should only contain one function" name="Module Function validation.Script Get-Obsidian.ps1 should only contain one function" time="0.2546" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-OBSStudio.ps1 should only contain one function" name="Module Function validation.Script Get-OBSStudio.ps1 should only contain one function" time="0.2541" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-OctopusDeployServer.ps1 should only contain one function" name="Module Function validation.Script Get-OctopusDeployServer.ps1 should only contain one function" time="0.2502" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-OctopusTentacle.ps1 should only contain one function" name="Module Function validation.Script Get-OctopusTentacle.ps1 should only contain one function" time="0.2617" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-OpenJDK.ps1 should only contain one function" name="Module Function validation.Script Get-OpenJDK.ps1 should only contain one function" time="0.246" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-OpenShellMenu.ps1 should only contain one function" name="Module Function validation.Script Get-OpenShellMenu.ps1 should only contain one function" time="0.2559" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-OpenWebStart.ps1 should only contain one function" name="Module Function validation.Script Get-OpenWebStart.ps1 should only contain one function" time="0.2522" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-OperaBrowser.ps1 should only contain one function" name="Module Function validation.Script Get-OperaBrowser.ps1 should only contain one function" time="0.3377" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-OperaGXBrowser.ps1 should only contain one function" name="Module Function validation.Script Get-OperaGXBrowser.ps1 should only contain one function" time="0.3213" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-OracleJava8.ps1 should only contain one function" name="Module Function validation.Script Get-OracleJava8.ps1 should only contain one function" time="0.2497" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-OracleVirtualBox.ps1 should only contain one function" name="Module Function validation.Script Get-OracleVirtualBox.ps1 should only contain one function" time="0.2479" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-PaintDotNet.ps1 should only contain one function" name="Module Function validation.Script Get-PaintDotNet.ps1 should only contain one function" time="0.255" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-PaintDotNetOfflineInstaller.ps1 should only contain one function" name="Module Function validation.Script Get-PaintDotNetOfflineInstaller.ps1 should only contain one function" time="0.2483" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Pandoc.ps1 should only contain one function" name="Module Function validation.Script Get-Pandoc.ps1 should only contain one function" time="0.2881" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-PDFForgePDFCreator.ps1 should only contain one function" name="Module Function validation.Script Get-PDFForgePDFCreator.ps1 should only contain one function" time="0.2578" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-PeaZipPeaZip.ps1 should only contain one function" name="Module Function validation.Script Get-PeaZipPeaZip.ps1 should only contain one function" time="0.2504" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Postman.ps1 should only contain one function" name="Module Function validation.Script Get-Postman.ps1 should only contain one function" time="0.2544" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Praat.ps1 should only contain one function" name="Module Function validation.Script Get-Praat.ps1 should only contain one function" time="0.2561" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-ProjectLibre.ps1 should only contain one function" name="Module Function validation.Script Get-ProjectLibre.ps1 should only contain one function" time="0.267" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Protege.ps1 should only contain one function" name="Module Function validation.Script Get-Protege.ps1 should only contain one function" time="0.2621" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-PSAppDeployToolkit.ps1 should only contain one function" name="Module Function validation.Script Get-PSAppDeployToolkit.ps1 should only contain one function" time="0.2488" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-PSFPython.ps1 should only contain one function" name="Module Function validation.Script Get-PSFPython.ps1 should only contain one function" time="0.264" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-PuTTY.ps1 should only contain one function" name="Module Function validation.Script Get-PuTTY.ps1 should only contain one function" time="0.2463" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-RCoreTeamRforWindows.ps1 should only contain one function" name="Module Function validation.Script Get-RCoreTeamRforWindows.ps1 should only contain one function" time="0.2804" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-RDAnalyzer.ps1 should only contain one function" name="Module Function validation.Script Get-RDAnalyzer.ps1 should only contain one function" time="0.2421" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-RingCentral.ps1 should only contain one function" name="Module Function validation.Script Get-RingCentral.ps1 should only contain one function" time="0.2366" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-RStudio.ps1 should only contain one function" name="Module Function validation.Script Get-RStudio.ps1 should only contain one function" time="0.2409" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-SafeExamBrowser.ps1 should only contain one function" name="Module Function validation.Script Get-SafeExamBrowser.ps1 should only contain one function" time="0.2559" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-SAGAGIS.ps1 should only contain one function" name="Module Function validation.Script Get-SAGAGIS.ps1 should only contain one function" time="0.2583" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-ScooterBeyondCompare.ps1 should only contain one function" name="Module Function validation.Script Get-ScooterBeyondCompare.ps1 should only contain one function" time="0.2813" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Scratch.ps1 should only contain one function" name="Module Function validation.Script Get-Scratch.ps1 should only contain one function" time="0.2549" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-ScreenToGif.ps1 should only contain one function" name="Module Function validation.Script Get-ScreenToGif.ps1 should only contain one function" time="0.2579" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-ShareX.ps1 should only contain one function" name="Module Function validation.Script Get-ShareX.ps1 should only contain one function" time="0.2586" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-SignalDesktop.ps1 should only contain one function" name="Module Function validation.Script Get-SignalDesktop.ps1 should only contain one function" time="0.2536" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Slack.ps1 should only contain one function" name="Module Function validation.Script Get-Slack.ps1 should only contain one function" time="0.2853" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-SmartBearSoapUI.ps1 should only contain one function" name="Module Function validation.Script Get-SmartBearSoapUI.ps1 should only contain one function" time="0.2613" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-stealthpuppyWindowsCustomisedDefaults.ps1 should only contain one function" name="Module Function validation.Script Get-stealthpuppyWindowsCustomisedDefaults.ps1 should only contain one function" time="0.257" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-StefansToolsgregpWin.ps1 should only contain one function" name="Module Function validation.Script Get-StefansToolsgregpWin.ps1 should only contain one function" time="0.2555" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-SumatraPDFReader.ps1 should only contain one function" name="Module Function validation.Script Get-SumatraPDFReader.ps1 should only contain one function" time="0.2599" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-TableauDesktop.ps1 should only contain one function" name="Module Function validation.Script Get-TableauDesktop.ps1 should only contain one function" time="0.2564" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-TableauPrep.ps1 should only contain one function" name="Module Function validation.Script Get-TableauPrep.ps1 should only contain one function" time="0.2533" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-TableauReader.ps1 should only contain one function" name="Module Function validation.Script Get-TableauReader.ps1 should only contain one function" time="0.2565" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-TeamViewer.ps1 should only contain one function" name="Module Function validation.Script Get-TeamViewer.ps1 should only contain one function" time="0.2532" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-TechSmithCamtasia.ps1 should only contain one function" name="Module Function validation.Script Get-TechSmithCamtasia.ps1 should only contain one function" time="0.2549" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-TechSmithSnagit.ps1 should only contain one function" name="Module Function validation.Script Get-TechSmithSnagit.ps1 should only contain one function" time="0.2575" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-TelegramDesktop.ps1 should only contain one function" name="Module Function validation.Script Get-TelegramDesktop.ps1 should only contain one function" time="0.2583" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-TelerikFiddlerClassic.ps1 should only contain one function" name="Module Function validation.Script Get-TelerikFiddlerClassic.ps1 should only contain one function" time="0.2553" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-TelerikFiddlerEverywhere.ps1 should only contain one function" name="Module Function validation.Script Get-TelerikFiddlerEverywhere.ps1 should only contain one function" time="0.2578" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Terminals.ps1 should only contain one function" name="Module Function validation.Script Get-Terminals.ps1 should only contain one function" time="0.2614" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-TeXstudio.ps1 should only contain one function" name="Module Function validation.Script Get-TeXstudio.ps1 should only contain one function" time="0.2597" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-TogglDesktop.ps1 should only contain one function" name="Module Function validation.Script Get-TogglDesktop.ps1 should only contain one function" time="0.258" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-TorProjectTorBrowser.ps1 should only contain one function" name="Module Function validation.Script Get-TorProjectTorBrowser.ps1 should only contain one function" time="0.2473" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Tower.ps1 should only contain one function" name="Module Function validation.Script Get-Tower.ps1 should only contain one function" time="0.2603" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-TrackerSoftwarePDFXChangeEditor.ps1 should only contain one function" name="Module Function validation.Script Get-TrackerSoftwarePDFXChangeEditor.ps1 should only contain one function" time="0.2873" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-USBPcap.ps1 should only contain one function" name="Module Function validation.Script Get-USBPcap.ps1 should only contain one function" time="0.2501" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-VastLimitsUberAgent.ps1 should only contain one function" name="Module Function validation.Script Get-VastLimitsUberAgent.ps1 should only contain one function" time="0.2528" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-VeraCrypt.ps1 should only contain one function" name="Module Function validation.Script Get-VeraCrypt.ps1 should only contain one function" time="0.2501" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-VercelHyper.ps1 should only contain one function" name="Module Function validation.Script Get-VercelHyper.ps1 should only contain one function" time="0.2487" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-VideoLanVlcPlayer.ps1 should only contain one function" name="Module Function validation.Script Get-VideoLanVlcPlayer.ps1 should only contain one function" time="0.2524" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-VisualCppRedistAIO.ps1 should only contain one function" name="Module Function validation.Script Get-VisualCppRedistAIO.ps1 should only contain one function" time="0.2542" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-VMwareHorizonClient.ps1 should only contain one function" name="Module Function validation.Script Get-VMwareHorizonClient.ps1 should only contain one function" time="0.2507" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-VMwareHorizonClientAlt.ps1 should only contain one function" name="Module Function validation.Script Get-VMwareHorizonClientAlt.ps1 should only contain one function" time="0.3887" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-VMwareOSOptimizationTool.ps1 should only contain one function" name="Module Function validation.Script Get-VMwareOSOptimizationTool.ps1 should only contain one function" time="0.389" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-VMwareTools.ps1 should only contain one function" name="Module Function validation.Script Get-VMwareTools.ps1 should only contain one function" time="0.2529" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-VMwareWorkstationPlayer.ps1 should only contain one function" name="Module Function validation.Script Get-VMwareWorkstationPlayer.ps1 should only contain one function" time="0.3888" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-VMwareWorkstationPro.ps1 should only contain one function" name="Module Function validation.Script Get-VMwareWorkstationPro.ps1 should only contain one function" time="0.3835" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-voidtoolsEverything.ps1 should only contain one function" name="Module Function validation.Script Get-voidtoolsEverything.ps1 should only contain one function" time="0.2498" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Win32OpenSSH.ps1 should only contain one function" name="Module Function validation.Script Get-Win32OpenSSH.ps1 should only contain one function" time="0.2598" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-WinMerge.ps1 should only contain one function" name="Module Function validation.Script Get-WinMerge.ps1 should only contain one function" time="0.2587" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-WinSCP.ps1 should only contain one function" name="Module Function validation.Script Get-WinSCP.ps1 should only contain one function" time="0.2591" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Wireshark.ps1 should only contain one function" name="Module Function validation.Script Get-Wireshark.ps1 should only contain one function" time="0.2615" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-WixToolset.ps1 should only contain one function" name="Module Function validation.Script Get-WixToolset.ps1 should only contain one function" time="0.264" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Zoom.ps1 should only contain one function" name="Module Function validation.Script Get-Zoom.ps1 should only contain one function" time="0.2921" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Zotero.ps1 should only contain one function" name="Module Function validation.Script Get-Zotero.ps1 should only contain one function" time="0.258" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script ConvertTo-DateTime.ps1 should only contain one function" name="Module Function validation.Script ConvertTo-DateTime.ps1 should only contain one function" time="0.2276" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script ConvertTo-Hashtable.ps1 should only contain one function" name="Module Function validation.Script ConvertTo-Hashtable.ps1 should only contain one function" time="0.2408" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Expand-GzipArchive.ps1 should only contain one function" name="Module Function validation.Script Expand-GzipArchive.ps1 should only contain one function" time="0.3249" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Architecture.ps1 should only contain one function" name="Module Function validation.Script Get-Architecture.ps1 should only contain one function" time="0.2283" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-FileType.ps1 should only contain one function" name="Module Function validation.Script Get-FileType.ps1 should only contain one function" time="0.2531" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-FunctionResource.ps1 should only contain one function" name="Module Function validation.Script Get-FunctionResource.ps1 should only contain one function" time="0.2306" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-GitHubRepoRelease.ps1 should only contain one function" name="Module Function validation.Script Get-GitHubRepoRelease.ps1 should only contain one function" time="0.2833" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-ModuleResource.ps1 should only contain one function" name="Module Function validation.Script Get-ModuleResource.ps1 should only contain one function" time="0.3891" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Platform.ps1 should only contain one function" name="Module Function validation.Script Get-Platform.ps1 should only contain one function" time="0.2998" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-SourceForgeRepoRelease.ps1 should only contain one function" name="Module Function validation.Script Get-SourceForgeRepoRelease.ps1 should only contain one function" time="0.2357" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Invoke-RestMethodWrapper.ps1 should only contain one function" name="Module Function validation.Script Invoke-RestMethodWrapper.ps1 should only contain one function" time="0.2691" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Invoke-SystemNetRequest.ps1 should only contain one function" name="Module Function validation.Script Invoke-SystemNetRequest.ps1 should only contain one function" time="0.3591" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Invoke-WebRequestWrapper.ps1 should only contain one function" name="Module Function validation.Script Invoke-WebRequestWrapper.ps1 should only contain one function" time="0.287" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script New-EvergreenPath.ps1 should only contain one function" name="Module Function validation.Script New-EvergreenPath.ps1 should only contain one function" time="0.2299" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Resolve-DnsNameWrapper.ps1 should only contain one function" name="Module Function validation.Script Resolve-DnsNameWrapper.ps1 should only contain one function" time="0.2164" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Resolve-InvokeWebRequest.ps1 should only contain one function" name="Module Function validation.Script Resolve-InvokeWebRequest.ps1 should only contain one function" time="0.2523" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Resolve-SystemNetWebRequest.ps1 should only contain one function" name="Module Function validation.Script Resolve-SystemNetWebRequest.ps1 should only contain one function" time="0.3776" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Save-File.ps1 should only contain one function" name="Module Function validation.Script Save-File.ps1 should only contain one function" time="0.2299" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Test-PSCore.ps1 should only contain one function" name="Module Function validation.Script Test-PSCore.ps1 should only contain one function" time="0.2302" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Export-EvergreenApp.ps1 should only contain one function" name="Module Function validation.Script Export-EvergreenApp.ps1 should only contain one function" time="0.2558" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Export-EvergreenManifest.ps1 should only contain one function" name="Module Function validation.Script Export-EvergreenManifest.ps1 should only contain one function" time="0.2693" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Find-EvergreenApp.ps1 should only contain one function" name="Module Function validation.Script Find-EvergreenApp.ps1 should only contain one function" time="0.2373" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-EvergreenApp.ps1 should only contain one function" name="Module Function validation.Script Get-EvergreenApp.ps1 should only contain one function" time="0.2498" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-EvergreenLibrary.ps1 should only contain one function" name="Module Function validation.Script Get-EvergreenLibrary.ps1 should only contain one function" time="0.2702" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Invoke-EvergreenApp.ps1 should only contain one function" name="Module Function validation.Script Invoke-EvergreenApp.ps1 should only contain one function" time="0.2437" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Invoke-EvergreenLibraryUpdate.ps1 should only contain one function" name="Module Function validation.Script Invoke-EvergreenLibraryUpdate.ps1 should only contain one function" time="0.3133" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script New-EvergreenLibrary.ps1 should only contain one function" name="Module Function validation.Script New-EvergreenLibrary.ps1 should only contain one function" time="0.2824" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Save-EvergreenApp.ps1 should only contain one function" name="Module Function validation.Script Save-EvergreenApp.ps1 should only contain one function" time="0.3009" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Test-EvergreenApp.ps1 should only contain one function" name="Module Function validation.Script Test-EvergreenApp.ps1 should only contain one function" time="0.2746" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="ParameterizedTest" name="Module Function validation.Script &lt;file.Name&gt; should match function name" executed="True" result="Success" success="True" time="63.8162" asserts="0" description="Script &lt;file.Name&gt; should match function name">
                <results>
                  <test-case description="Script Get-1Password.ps1 should match function name" name="Module Function validation.Script Get-1Password.ps1 should match function name" time="0.2757" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-1Password7.ps1 should match function name" name="Module Function validation.Script Get-1Password7.ps1 should match function name" time="0.258" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-7zip.ps1 should match function name" name="Module Function validation.Script Get-7zip.ps1 should match function name" time="0.259" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-7ZipZS.ps1 should match function name" name="Module Function validation.Script Get-7ZipZS.ps1 should match function name" time="0.263" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-AdobeAcrobat.ps1 should match function name" name="Module Function validation.Script Get-AdobeAcrobat.ps1 should match function name" time="0.2643" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-AdobeAcrobatDC.ps1 should match function name" name="Module Function validation.Script Get-AdobeAcrobatDC.ps1 should match function name" time="0.2538" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-AdobeAcrobatProStdDC.ps1 should match function name" name="Module Function validation.Script Get-AdobeAcrobatProStdDC.ps1 should match function name" time="0.2714" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-AdobeAcrobatReaderDC.ps1 should match function name" name="Module Function validation.Script Get-AdobeAcrobatReaderDC.ps1 should match function name" time="0.2557" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-AdobeBrackets.ps1 should match function name" name="Module Function validation.Script Get-AdobeBrackets.ps1 should match function name" time="0.2546" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-AdoptiumTemurin11.ps1 should match function name" name="Module Function validation.Script Get-AdoptiumTemurin11.ps1 should match function name" time="0.2515" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-AdoptiumTemurin16.ps1 should match function name" name="Module Function validation.Script Get-AdoptiumTemurin16.ps1 should match function name" time="0.2565" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-AdoptiumTemurin17.ps1 should match function name" name="Module Function validation.Script Get-AdoptiumTemurin17.ps1 should match function name" time="0.2546" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-AdoptiumTemurin18.ps1 should match function name" name="Module Function validation.Script Get-AdoptiumTemurin18.ps1 should match function name" time="0.2372" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-AdoptiumTemurin8.ps1 should match function name" name="Module Function validation.Script Get-AdoptiumTemurin8.ps1 should match function name" time="0.2451" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-AdoptOpenJDK11.ps1 should match function name" name="Module Function validation.Script Get-AdoptOpenJDK11.ps1 should match function name" time="0.2565" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-AdoptOpenJDK16.ps1 should match function name" name="Module Function validation.Script Get-AdoptOpenJDK16.ps1 should match function name" time="0.2418" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-AdoptOpenJDK8.ps1 should match function name" name="Module Function validation.Script Get-AdoptOpenJDK8.ps1 should match function name" time="0.2477" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-AkeoRufus.ps1 should match function name" name="Module Function validation.Script Get-AkeoRufus.ps1 should match function name" time="0.2577" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-AmazonCorretto.ps1 should match function name" name="Module Function validation.Script Get-AmazonCorretto.ps1 should match function name" time="0.2512" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Anaconda.ps1 should match function name" name="Module Function validation.Script Get-Anaconda.ps1 should match function name" time="0.254" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Anki.ps1 should match function name" name="Module Function validation.Script Get-Anki.ps1 should match function name" time="0.251" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-AppVentiX.ps1 should match function name" name="Module Function validation.Script Get-AppVentiX.ps1 should match function name" time="0.3001" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-ArtifexGhostscript.ps1 should match function name" name="Module Function validation.Script Get-ArtifexGhostscript.ps1 should match function name" time="0.2773" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-AtlassianSourcetree.ps1 should match function name" name="Module Function validation.Script Get-AtlassianSourcetree.ps1 should match function name" time="0.2545" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Audacity.ps1 should match function name" name="Module Function validation.Script Get-Audacity.ps1 should match function name" time="0.2577" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-AutoDarkMode.ps1 should match function name" name="Module Function validation.Script Get-AutoDarkMode.ps1 should match function name" time="0.2586" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-BeekeeperStudio.ps1 should match function name" name="Module Function validation.Script Get-BeekeeperStudio.ps1 should match function name" time="0.2497" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-BISF.ps1 should match function name" name="Module Function validation.Script Get-BISF.ps1 should match function name" time="0.2532" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-BitwardenDesktop.ps1 should match function name" name="Module Function validation.Script Get-BitwardenDesktop.ps1 should match function name" time="0.2538" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-BlenderLauncher.ps1 should match function name" name="Module Function validation.Script Get-BlenderLauncher.ps1 should match function name" time="0.2625" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-BlueJ.ps1 should match function name" name="Module Function validation.Script Get-BlueJ.ps1 should match function name" time="0.2438" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-CendioThinLinc.ps1 should match function name" name="Module Function validation.Script Get-CendioThinLinc.ps1 should match function name" time="0.2433" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-CitrixVMTools.ps1 should match function name" name="Module Function validation.Script Get-CitrixVMTools.ps1 should match function name" time="0.2726" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-CitrixWorkspaceApp.ps1 should match function name" name="Module Function validation.Script Get-CitrixWorkspaceApp.ps1 should match function name" time="0.2488" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-CodelerityApacheNetBeans.ps1 should match function name" name="Module Function validation.Script Get-CodelerityApacheNetBeans.ps1 should match function name" time="0.2527" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-ConnectionExperienceIndicator.ps1 should match function name" name="Module Function validation.Script Get-ConnectionExperienceIndicator.ps1 should match function name" time="0.2419" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-ControlUpAgent.ps1 should match function name" name="Module Function validation.Script Get-ControlUpAgent.ps1 should match function name" time="0.2501" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-ControlUpConsole.ps1 should match function name" name="Module Function validation.Script Get-ControlUpConsole.ps1 should match function name" time="0.2497" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Cyberduck.ps1 should match function name" name="Module Function validation.Script Get-Cyberduck.ps1 should match function name" time="0.2493" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-dbeaver.ps1 should match function name" name="Module Function validation.Script Get-dbeaver.ps1 should match function name" time="0.2522" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-DebaucheeBarrier.ps1 should match function name" name="Module Function validation.Script Get-DebaucheeBarrier.ps1 should match function name" time="0.2572" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-deviceTRUST.ps1 should match function name" name="Module Function validation.Script Get-deviceTRUST.ps1 should match function name" time="0.2524" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-DevToys.ps1 should match function name" name="Module Function validation.Script Get-DevToys.ps1 should match function name" time="0.2526" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-diagrams.net.ps1 should match function name" name="Module Function validation.Script Get-diagrams.net.ps1 should match function name" time="0.253" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-dnGrep.ps1 should match function name" name="Module Function validation.Script Get-dnGrep.ps1 should match function name" time="0.258" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-DockerDesktop.ps1 should match function name" name="Module Function validation.Script Get-DockerDesktop.ps1 should match function name" time="0.3562" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-EgnyteDesktopApp.ps1 should match function name" name="Module Function validation.Script Get-EgnyteDesktopApp.ps1 should match function name" time="0.2541" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-FileZilla.ps1 should match function name" name="Module Function validation.Script Get-FileZilla.ps1 should match function name" time="0.2541" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Fork.ps1 should match function name" name="Module Function validation.Script Get-Fork.ps1 should match function name" time="0.2434" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-FoxitPDFEditor.ps1 should match function name" name="Module Function validation.Script Get-FoxitPDFEditor.ps1 should match function name" time="0.2433" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-FoxitReader.ps1 should match function name" name="Module Function validation.Script Get-FoxitReader.ps1 should match function name" time="0.2464" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-FreedomScientificFusion.ps1 should match function name" name="Module Function validation.Script Get-FreedomScientificFusion.ps1 should match function name" time="0.2449" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-FreedomScientificJAWS.ps1 should match function name" name="Module Function validation.Script Get-FreedomScientificJAWS.ps1 should match function name" time="0.2472" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-FreedomScientificZoomText.ps1 should match function name" name="Module Function validation.Script Get-FreedomScientificZoomText.ps1 should match function name" time="0.2462" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-FreeFem.ps1 should match function name" name="Module Function validation.Script Get-FreeFem.ps1 should match function name" time="0.2481" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-GeekSoftwarePDF24Creator.ps1 should match function name" name="Module Function validation.Script Get-GeekSoftwarePDF24Creator.ps1 should match function name" time="0.2656" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Gephi.ps1 should match function name" name="Module Function validation.Script Get-Gephi.ps1 should match function name" time="0.2621" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-GhislerTotalCommander.ps1 should match function name" name="Module Function validation.Script Get-GhislerTotalCommander.ps1 should match function name" time="0.2284" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Gimp.ps1 should match function name" name="Module Function validation.Script Get-Gimp.ps1 should match function name" time="0.2581" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-GitForWindows.ps1 should match function name" name="Module Function validation.Script Get-GitForWindows.ps1 should match function name" time="0.2617" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-GitHubAtom.ps1 should match function name" name="Module Function validation.Script Get-GitHubAtom.ps1 should match function name" time="0.256" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-GitHubRelease.ps1 should match function name" name="Module Function validation.Script Get-GitHubRelease.ps1 should match function name" time="0.2911" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-GoogleChrome.ps1 should match function name" name="Module Function validation.Script Get-GoogleChrome.ps1 should match function name" time="0.2544" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Gpg4win.ps1 should match function name" name="Module Function validation.Script Get-Gpg4win.ps1 should match function name" time="0.2612" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Greenshot.ps1 should match function name" name="Module Function validation.Script Get-Greenshot.ps1 should match function name" time="0.275" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-gretl.ps1 should match function name" name="Module Function validation.Script Get-gretl.ps1 should match function name" time="0.2563" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Handbrake.ps1 should match function name" name="Module Function validation.Script Get-Handbrake.ps1 should match function name" time="0.2759" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-HashicorpBoundary.ps1 should match function name" name="Module Function validation.Script Get-HashicorpBoundary.ps1 should match function name" time="0.2593" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-HashicorpConsul.ps1 should match function name" name="Module Function validation.Script Get-HashicorpConsul.ps1 should match function name" time="0.2556" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-HashicorpNomad.ps1 should match function name" name="Module Function validation.Script Get-HashicorpNomad.ps1 should match function name" time="0.2533" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-HashicorpPacker.ps1 should match function name" name="Module Function validation.Script Get-HashicorpPacker.ps1 should match function name" time="0.2611" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-HashicorpTerraform.ps1 should match function name" name="Module Function validation.Script Get-HashicorpTerraform.ps1 should match function name" time="0.2593" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-HashicorpVault.ps1 should match function name" name="Module Function validation.Script Get-HashicorpVault.ps1 should match function name" time="0.2506" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-HashicorpWaypoint.ps1 should match function name" name="Module Function validation.Script Get-HashicorpWaypoint.ps1 should match function name" time="0.257" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-ImageGlass.ps1 should match function name" name="Module Function validation.Script Get-ImageGlass.ps1 should match function name" time="0.2782" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-ImageMagickStudioImageMagick.ps1 should match function name" name="Module Function validation.Script Get-ImageMagickStudioImageMagick.ps1 should match function name" time="0.2651" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-JamTreeSizeFree.ps1 should match function name" name="Module Function validation.Script Get-JamTreeSizeFree.ps1 should match function name" time="0.2676" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-JamTreeSizeProfessional.ps1 should match function name" name="Module Function validation.Script Get-JamTreeSizeProfessional.ps1 should match function name" time="0.2814" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-JASP.ps1 should match function name" name="Module Function validation.Script Get-JASP.ps1 should match function name" time="0.3272" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-JeremyMainGPUProfiler.ps1 should match function name" name="Module Function validation.Script Get-JeremyMainGPUProfiler.ps1 should match function name" time="0.2862" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-JetBrainsIntelliJIDEA.ps1 should match function name" name="Module Function validation.Script Get-JetBrainsIntelliJIDEA.ps1 should match function name" time="0.2812" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-JetBrainsPyCharm.ps1 should match function name" name="Module Function validation.Script Get-JetBrainsPyCharm.ps1 should match function name" time="0.2731" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-jq.ps1 should match function name" name="Module Function validation.Script Get-jq.ps1 should match function name" time="0.2718" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-jrsoftwareInnoSetup.ps1 should match function name" name="Module Function validation.Script Get-jrsoftwareInnoSetup.ps1 should match function name" time="0.2708" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-KarakunOpenWebStart.ps1 should match function name" name="Module Function validation.Script Get-KarakunOpenWebStart.ps1 should match function name" time="0.2639" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-KeePass.ps1 should match function name" name="Module Function validation.Script Get-KeePass.ps1 should match function name" time="0.2871" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-KeePassXCTeamKeePassXC.ps1 should match function name" name="Module Function validation.Script Get-KeePassXCTeamKeePassXC.ps1 should match function name" time="0.2733" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-LogMeInGoToMeeting.ps1 should match function name" name="Module Function validation.Script Get-LogMeInGoToMeeting.ps1 should match function name" time="0.2813" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-LogMeInGoToOpener.ps1 should match function name" name="Module Function validation.Script Get-LogMeInGoToOpener.ps1 should match function name" time="0.2631" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MasterPackager.ps1 should match function name" name="Module Function validation.Script Get-MasterPackager.ps1 should match function name" time="0.262" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MattermostDesktop.ps1 should match function name" name="Module Function validation.Script Get-MattermostDesktop.ps1 should match function name" time="0.4853" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-McNeelRhino.ps1 should match function name" name="Module Function validation.Script Get-McNeelRhino.ps1 should match function name" time="0.2679" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MendeleyDesktop.ps1 should match function name" name="Module Function validation.Script Get-MendeleyDesktop.ps1 should match function name" time="0.2484" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MestrelabMnova.ps1 should match function name" name="Module Function validation.Script Get-MestrelabMnova.ps1 should match function name" time="0.2647" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Microsoft.NET.ps1 should match function name" name="Module Function validation.Script Get-Microsoft.NET.ps1 should match function name" time="0.2626" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Microsoft365Apps.ps1 should match function name" name="Module Function validation.Script Get-Microsoft365Apps.ps1 should match function name" time="0.3072" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MicrosoftAzureDataStudio.ps1 should match function name" name="Module Function validation.Script Get-MicrosoftAzureDataStudio.ps1 should match function name" time="0.2679" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MicrosoftAzureFunctionsCoreTools.ps1 should match function name" name="Module Function validation.Script Get-MicrosoftAzureFunctionsCoreTools.ps1 should match function name" time="0.2466" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MicrosoftAzureStorageExplorer.ps1 should match function name" name="Module Function validation.Script Get-MicrosoftAzureStorageExplorer.ps1 should match function name" time="0.2473" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MicrosoftBicep.ps1 should match function name" name="Module Function validation.Script Get-MicrosoftBicep.ps1 should match function name" time="0.26" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MicrosoftBotFrameworkEmulator.ps1 should match function name" name="Module Function validation.Script Get-MicrosoftBotFrameworkEmulator.ps1 should match function name" time="0.2594" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MicrosoftEdge.ps1 should match function name" name="Module Function validation.Script Get-MicrosoftEdge.ps1 should match function name" time="0.2591" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MicrosoftEdgeDriver.ps1 should match function name" name="Module Function validation.Script Get-MicrosoftEdgeDriver.ps1 should match function name" time="0.2517" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MicrosoftEdgeWebView2Runtime.ps1 should match function name" name="Module Function validation.Script Get-MicrosoftEdgeWebView2Runtime.ps1 should match function name" time="0.2587" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MicrosoftFSLogixApps.ps1 should match function name" name="Module Function validation.Script Get-MicrosoftFSLogixApps.ps1 should match function name" time="0.2817" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MicrosoftOneDrive.ps1 should match function name" name="Module Function validation.Script Get-MicrosoftOneDrive.ps1 should match function name" time="0.2584" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MicrosoftPowerShell.ps1 should match function name" name="Module Function validation.Script Get-MicrosoftPowerShell.ps1 should match function name" time="0.2663" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MicrosoftPowerToys.ps1 should match function name" name="Module Function validation.Script Get-MicrosoftPowerToys.ps1 should match function name" time="0.2643" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MicrosoftSsms.ps1 should match function name" name="Module Function validation.Script Get-MicrosoftSsms.ps1 should match function name" time="0.2565" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MicrosoftTeams.ps1 should match function name" name="Module Function validation.Script Get-MicrosoftTeams.ps1 should match function name" time="0.2579" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MicrosoftVisualStudio.ps1 should match function name" name="Module Function validation.Script Get-MicrosoftVisualStudio.ps1 should match function name" time="0.268" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MicrosoftVisualStudioCode.ps1 should match function name" name="Module Function validation.Script Get-MicrosoftVisualStudioCode.ps1 should match function name" time="0.2544" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MicrosoftWindowsPackageManagerClient.ps1 should match function name" name="Module Function validation.Script Get-MicrosoftWindowsPackageManagerClient.ps1 should match function name" time="0.2533" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MicrosoftWvdBootloader.ps1 should match function name" name="Module Function validation.Script Get-MicrosoftWvdBootloader.ps1 should match function name" time="0.2532" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MicrosoftWvdInfraAgent.ps1 should match function name" name="Module Function validation.Script Get-MicrosoftWvdInfraAgent.ps1 should match function name" time="0.2946" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MicrosoftWvdMultimediaRedirection.ps1 should match function name" name="Module Function validation.Script Get-MicrosoftWvdMultimediaRedirection.ps1 should match function name" time="0.2948" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MicrosoftWvdRemoteDesktop.ps1 should match function name" name="Module Function validation.Script Get-MicrosoftWvdRemoteDesktop.ps1 should match function name" time="0.3626" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MicrosoftWvdRtcService.ps1 should match function name" name="Module Function validation.Script Get-MicrosoftWvdRtcService.ps1 should match function name" time="0.2734" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Miniconda.ps1 should match function name" name="Module Function validation.Script Get-Miniconda.ps1 should match function name" time="0.2558" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Minitab.ps1 should match function name" name="Module Function validation.Script Get-Minitab.ps1 should match function name" time="0.2711" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MiniZincIDE.ps1 should match function name" name="Module Function validation.Script Get-MiniZincIDE.ps1 should match function name" time="0.2676" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MirantisLens.ps1 should match function name" name="Module Function validation.Script Get-MirantisLens.ps1 should match function name" time="0.4276" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MozillaFirefox.ps1 should match function name" name="Module Function validation.Script Get-MozillaFirefox.ps1 should match function name" time="0.2875" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MozillaThunderbird.ps1 should match function name" name="Module Function validation.Script Get-MozillaThunderbird.ps1 should match function name" time="0.2757" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-mRemoteNG.ps1 should match function name" name="Module Function validation.Script Get-mRemoteNG.ps1 should match function name" time="0.2661" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-MuseScore.ps1 should match function name" name="Module Function validation.Script Get-MuseScore.ps1 should match function name" time="0.2751" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Naps2.ps1 should match function name" name="Module Function validation.Script Get-Naps2.ps1 should match function name" time="0.2511" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-NETworkManager.ps1 should match function name" name="Module Function validation.Script Get-NETworkManager.ps1 should match function name" time="0.2624" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-NevcairielLAVFilters.ps1 should match function name" name="Module Function validation.Script Get-NevcairielLAVFilters.ps1 should match function name" time="0.2618" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Nomacs.ps1 should match function name" name="Module Function validation.Script Get-Nomacs.ps1 should match function name" time="0.2752" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Notable.ps1 should match function name" name="Module Function validation.Script Get-Notable.ps1 should match function name" time="0.262" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-NotepadPlusPlus.ps1 should match function name" name="Module Function validation.Script Get-NotepadPlusPlus.ps1 should match function name" time="0.2583" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Obsidian.ps1 should match function name" name="Module Function validation.Script Get-Obsidian.ps1 should match function name" time="0.2742" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-OBSStudio.ps1 should match function name" name="Module Function validation.Script Get-OBSStudio.ps1 should match function name" time="0.2606" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-OctopusDeployServer.ps1 should match function name" name="Module Function validation.Script Get-OctopusDeployServer.ps1 should match function name" time="0.2474" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-OctopusTentacle.ps1 should match function name" name="Module Function validation.Script Get-OctopusTentacle.ps1 should match function name" time="0.2602" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-OpenJDK.ps1 should match function name" name="Module Function validation.Script Get-OpenJDK.ps1 should match function name" time="0.2654" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-OpenShellMenu.ps1 should match function name" name="Module Function validation.Script Get-OpenShellMenu.ps1 should match function name" time="0.2788" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-OpenWebStart.ps1 should match function name" name="Module Function validation.Script Get-OpenWebStart.ps1 should match function name" time="0.2641" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-OperaBrowser.ps1 should match function name" name="Module Function validation.Script Get-OperaBrowser.ps1 should match function name" time="0.3262" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-OperaGXBrowser.ps1 should match function name" name="Module Function validation.Script Get-OperaGXBrowser.ps1 should match function name" time="0.331" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-OracleJava8.ps1 should match function name" name="Module Function validation.Script Get-OracleJava8.ps1 should match function name" time="0.2552" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-OracleVirtualBox.ps1 should match function name" name="Module Function validation.Script Get-OracleVirtualBox.ps1 should match function name" time="0.2548" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-PaintDotNet.ps1 should match function name" name="Module Function validation.Script Get-PaintDotNet.ps1 should match function name" time="0.2774" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-PaintDotNetOfflineInstaller.ps1 should match function name" name="Module Function validation.Script Get-PaintDotNetOfflineInstaller.ps1 should match function name" time="0.2618" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Pandoc.ps1 should match function name" name="Module Function validation.Script Get-Pandoc.ps1 should match function name" time="0.2697" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-PDFForgePDFCreator.ps1 should match function name" name="Module Function validation.Script Get-PDFForgePDFCreator.ps1 should match function name" time="0.2749" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-PeaZipPeaZip.ps1 should match function name" name="Module Function validation.Script Get-PeaZipPeaZip.ps1 should match function name" time="0.2556" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Postman.ps1 should match function name" name="Module Function validation.Script Get-Postman.ps1 should match function name" time="0.2671" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Praat.ps1 should match function name" name="Module Function validation.Script Get-Praat.ps1 should match function name" time="0.2582" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-ProjectLibre.ps1 should match function name" name="Module Function validation.Script Get-ProjectLibre.ps1 should match function name" time="0.2653" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Protege.ps1 should match function name" name="Module Function validation.Script Get-Protege.ps1 should match function name" time="0.2634" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-PSAppDeployToolkit.ps1 should match function name" name="Module Function validation.Script Get-PSAppDeployToolkit.ps1 should match function name" time="0.2654" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-PSFPython.ps1 should match function name" name="Module Function validation.Script Get-PSFPython.ps1 should match function name" time="0.2685" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-PuTTY.ps1 should match function name" name="Module Function validation.Script Get-PuTTY.ps1 should match function name" time="0.2817" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-RCoreTeamRforWindows.ps1 should match function name" name="Module Function validation.Script Get-RCoreTeamRforWindows.ps1 should match function name" time="0.2762" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-RDAnalyzer.ps1 should match function name" name="Module Function validation.Script Get-RDAnalyzer.ps1 should match function name" time="0.2818" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-RingCentral.ps1 should match function name" name="Module Function validation.Script Get-RingCentral.ps1 should match function name" time="0.2871" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-RStudio.ps1 should match function name" name="Module Function validation.Script Get-RStudio.ps1 should match function name" time="0.2707" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-SafeExamBrowser.ps1 should match function name" name="Module Function validation.Script Get-SafeExamBrowser.ps1 should match function name" time="0.274" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-SAGAGIS.ps1 should match function name" name="Module Function validation.Script Get-SAGAGIS.ps1 should match function name" time="0.2884" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-ScooterBeyondCompare.ps1 should match function name" name="Module Function validation.Script Get-ScooterBeyondCompare.ps1 should match function name" time="0.3076" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Scratch.ps1 should match function name" name="Module Function validation.Script Get-Scratch.ps1 should match function name" time="0.2551" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-ScreenToGif.ps1 should match function name" name="Module Function validation.Script Get-ScreenToGif.ps1 should match function name" time="0.2534" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-ShareX.ps1 should match function name" name="Module Function validation.Script Get-ShareX.ps1 should match function name" time="0.272" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-SignalDesktop.ps1 should match function name" name="Module Function validation.Script Get-SignalDesktop.ps1 should match function name" time="0.2554" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Slack.ps1 should match function name" name="Module Function validation.Script Get-Slack.ps1 should match function name" time="0.29" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-SmartBearSoapUI.ps1 should match function name" name="Module Function validation.Script Get-SmartBearSoapUI.ps1 should match function name" time="0.2723" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-stealthpuppyWindowsCustomisedDefaults.ps1 should match function name" name="Module Function validation.Script Get-stealthpuppyWindowsCustomisedDefaults.ps1 should match function name" time="0.2654" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-StefansToolsgregpWin.ps1 should match function name" name="Module Function validation.Script Get-StefansToolsgregpWin.ps1 should match function name" time="0.2471" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-SumatraPDFReader.ps1 should match function name" name="Module Function validation.Script Get-SumatraPDFReader.ps1 should match function name" time="0.266" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-TableauDesktop.ps1 should match function name" name="Module Function validation.Script Get-TableauDesktop.ps1 should match function name" time="0.253" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-TableauPrep.ps1 should match function name" name="Module Function validation.Script Get-TableauPrep.ps1 should match function name" time="0.2598" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-TableauReader.ps1 should match function name" name="Module Function validation.Script Get-TableauReader.ps1 should match function name" time="0.2605" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-TeamViewer.ps1 should match function name" name="Module Function validation.Script Get-TeamViewer.ps1 should match function name" time="0.2657" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-TechSmithCamtasia.ps1 should match function name" name="Module Function validation.Script Get-TechSmithCamtasia.ps1 should match function name" time="0.2717" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-TechSmithSnagit.ps1 should match function name" name="Module Function validation.Script Get-TechSmithSnagit.ps1 should match function name" time="0.2704" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-TelegramDesktop.ps1 should match function name" name="Module Function validation.Script Get-TelegramDesktop.ps1 should match function name" time="0.2588" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-TelerikFiddlerClassic.ps1 should match function name" name="Module Function validation.Script Get-TelerikFiddlerClassic.ps1 should match function name" time="0.2532" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-TelerikFiddlerEverywhere.ps1 should match function name" name="Module Function validation.Script Get-TelerikFiddlerEverywhere.ps1 should match function name" time="0.2717" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Terminals.ps1 should match function name" name="Module Function validation.Script Get-Terminals.ps1 should match function name" time="0.2592" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-TeXstudio.ps1 should match function name" name="Module Function validation.Script Get-TeXstudio.ps1 should match function name" time="0.2689" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-TogglDesktop.ps1 should match function name" name="Module Function validation.Script Get-TogglDesktop.ps1 should match function name" time="0.2931" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-TorProjectTorBrowser.ps1 should match function name" name="Module Function validation.Script Get-TorProjectTorBrowser.ps1 should match function name" time="0.2569" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Tower.ps1 should match function name" name="Module Function validation.Script Get-Tower.ps1 should match function name" time="0.2751" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-TrackerSoftwarePDFXChangeEditor.ps1 should match function name" name="Module Function validation.Script Get-TrackerSoftwarePDFXChangeEditor.ps1 should match function name" time="0.2993" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-USBPcap.ps1 should match function name" name="Module Function validation.Script Get-USBPcap.ps1 should match function name" time="0.2615" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-VastLimitsUberAgent.ps1 should match function name" name="Module Function validation.Script Get-VastLimitsUberAgent.ps1 should match function name" time="0.2653" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-VeraCrypt.ps1 should match function name" name="Module Function validation.Script Get-VeraCrypt.ps1 should match function name" time="0.2644" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-VercelHyper.ps1 should match function name" name="Module Function validation.Script Get-VercelHyper.ps1 should match function name" time="0.2723" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-VideoLanVlcPlayer.ps1 should match function name" name="Module Function validation.Script Get-VideoLanVlcPlayer.ps1 should match function name" time="0.2704" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-VisualCppRedistAIO.ps1 should match function name" name="Module Function validation.Script Get-VisualCppRedistAIO.ps1 should match function name" time="0.2656" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-VMwareHorizonClient.ps1 should match function name" name="Module Function validation.Script Get-VMwareHorizonClient.ps1 should match function name" time="0.2537" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-VMwareHorizonClientAlt.ps1 should match function name" name="Module Function validation.Script Get-VMwareHorizonClientAlt.ps1 should match function name" time="0.3756" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-VMwareOSOptimizationTool.ps1 should match function name" name="Module Function validation.Script Get-VMwareOSOptimizationTool.ps1 should match function name" time="0.3929" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-VMwareTools.ps1 should match function name" name="Module Function validation.Script Get-VMwareTools.ps1 should match function name" time="0.2768" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-VMwareWorkstationPlayer.ps1 should match function name" name="Module Function validation.Script Get-VMwareWorkstationPlayer.ps1 should match function name" time="0.4264" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-VMwareWorkstationPro.ps1 should match function name" name="Module Function validation.Script Get-VMwareWorkstationPro.ps1 should match function name" time="0.416" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-voidtoolsEverything.ps1 should match function name" name="Module Function validation.Script Get-voidtoolsEverything.ps1 should match function name" time="0.2608" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Win32OpenSSH.ps1 should match function name" name="Module Function validation.Script Get-Win32OpenSSH.ps1 should match function name" time="0.2689" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-WinMerge.ps1 should match function name" name="Module Function validation.Script Get-WinMerge.ps1 should match function name" time="0.2693" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-WinSCP.ps1 should match function name" name="Module Function validation.Script Get-WinSCP.ps1 should match function name" time="0.2493" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Wireshark.ps1 should match function name" name="Module Function validation.Script Get-Wireshark.ps1 should match function name" time="0.2628" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-WixToolset.ps1 should match function name" name="Module Function validation.Script Get-WixToolset.ps1 should match function name" time="0.2551" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Zoom.ps1 should match function name" name="Module Function validation.Script Get-Zoom.ps1 should match function name" time="0.2774" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Zotero.ps1 should match function name" name="Module Function validation.Script Get-Zotero.ps1 should match function name" time="0.2635" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script ConvertTo-DateTime.ps1 should match function name" name="Module Function validation.Script ConvertTo-DateTime.ps1 should match function name" time="0.231" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script ConvertTo-Hashtable.ps1 should match function name" name="Module Function validation.Script ConvertTo-Hashtable.ps1 should match function name" time="0.2358" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Expand-GzipArchive.ps1 should match function name" name="Module Function validation.Script Expand-GzipArchive.ps1 should match function name" time="0.3181" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Architecture.ps1 should match function name" name="Module Function validation.Script Get-Architecture.ps1 should match function name" time="0.2492" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-FileType.ps1 should match function name" name="Module Function validation.Script Get-FileType.ps1 should match function name" time="0.2706" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-FunctionResource.ps1 should match function name" name="Module Function validation.Script Get-FunctionResource.ps1 should match function name" time="0.2294" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-GitHubRepoRelease.ps1 should match function name" name="Module Function validation.Script Get-GitHubRepoRelease.ps1 should match function name" time="0.2909" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-ModuleResource.ps1 should match function name" name="Module Function validation.Script Get-ModuleResource.ps1 should match function name" time="0.4075" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-Platform.ps1 should match function name" name="Module Function validation.Script Get-Platform.ps1 should match function name" time="0.3179" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-SourceForgeRepoRelease.ps1 should match function name" name="Module Function validation.Script Get-SourceForgeRepoRelease.ps1 should match function name" time="0.2515" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Invoke-RestMethodWrapper.ps1 should match function name" name="Module Function validation.Script Invoke-RestMethodWrapper.ps1 should match function name" time="0.2903" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Invoke-SystemNetRequest.ps1 should match function name" name="Module Function validation.Script Invoke-SystemNetRequest.ps1 should match function name" time="0.3992" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Invoke-WebRequestWrapper.ps1 should match function name" name="Module Function validation.Script Invoke-WebRequestWrapper.ps1 should match function name" time="0.3081" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script New-EvergreenPath.ps1 should match function name" name="Module Function validation.Script New-EvergreenPath.ps1 should match function name" time="0.2277" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Resolve-DnsNameWrapper.ps1 should match function name" name="Module Function validation.Script Resolve-DnsNameWrapper.ps1 should match function name" time="0.2193" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Resolve-InvokeWebRequest.ps1 should match function name" name="Module Function validation.Script Resolve-InvokeWebRequest.ps1 should match function name" time="0.2688" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Resolve-SystemNetWebRequest.ps1 should match function name" name="Module Function validation.Script Resolve-SystemNetWebRequest.ps1 should match function name" time="0.4019" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Save-File.ps1 should match function name" name="Module Function validation.Script Save-File.ps1 should match function name" time="0.2395" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Test-PSCore.ps1 should match function name" name="Module Function validation.Script Test-PSCore.ps1 should match function name" time="0.248" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Export-EvergreenApp.ps1 should match function name" name="Module Function validation.Script Export-EvergreenApp.ps1 should match function name" time="0.2617" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Export-EvergreenManifest.ps1 should match function name" name="Module Function validation.Script Export-EvergreenManifest.ps1 should match function name" time="0.2727" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Find-EvergreenApp.ps1 should match function name" name="Module Function validation.Script Find-EvergreenApp.ps1 should match function name" time="0.2476" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-EvergreenApp.ps1 should match function name" name="Module Function validation.Script Get-EvergreenApp.ps1 should match function name" time="0.2631" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Get-EvergreenLibrary.ps1 should match function name" name="Module Function validation.Script Get-EvergreenLibrary.ps1 should match function name" time="0.2881" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Invoke-EvergreenApp.ps1 should match function name" name="Module Function validation.Script Invoke-EvergreenApp.ps1 should match function name" time="0.2625" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Invoke-EvergreenLibraryUpdate.ps1 should match function name" name="Module Function validation.Script Invoke-EvergreenLibraryUpdate.ps1 should match function name" time="0.3385" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script New-EvergreenLibrary.ps1 should match function name" name="Module Function validation.Script New-EvergreenLibrary.ps1 should match function name" time="0.3112" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Save-EvergreenApp.ps1 should match function name" name="Module Function validation.Script Save-EvergreenApp.ps1 should match function name" time="0.33" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Script Test-EvergreenApp.ps1 should match function name" name="Module Function validation.Script Test-EvergreenApp.ps1 should match function name" time="0.2926" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Module Metadata validation" executed="True" result="Success" success="True" time="200.2635" asserts="0" description="Module Metadata validation">
            <results>
              <test-case description="Script fileinfo should be OK" name="Module Metadata validation.Script fileinfo should be OK" time="0.3041" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="Import module should be OK" name="Module Metadata validation.Import module should be OK" time="0.6203" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\evergreen\tests\PrivateFunctions.Tests.ps1" executed="True" result="Success" success="True" time="19.9468" asserts="0" description="C:\projects\evergreen\tests\PrivateFunctions.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Test-PSCore" executed="True" result="Success" success="True" time="1.2245" asserts="0" description="Test-PSCore">
            <results>
              <test-suite type="TestFixture" name="Test-PSCore.Tests whether we are running on PowerShell Core" executed="True" result="Success" success="True" time="0.6367" asserts="0" description="Test-PSCore.Tests whether we are running on PowerShell Core">
                <results>
                  <test-case description="Returns True if running Windows PowerShell" name="Test-PSCore.Tests whether we are running on PowerShell Core.Returns True if running Windows PowerShell" time="0.4718" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test-PSCore.Tests whether we are running on Windows PowerShell" executed="True" result="Success" success="True" time="1.0674" asserts="0" description="Test-PSCore.Tests whether we are running on Windows PowerShell">
                <results>
                  <test-case description="Returns False if running Windows PowerShell" name="Test-PSCore.Tests whether we are running on Windows PowerShell.Returns False if running Windows PowerShell" time="0.2721" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Get-Architecture" executed="True" result="Success" success="True" time="2.2573" asserts="0" description="Get-Architecture">
            <results>
              <test-suite type="TestFixture" name="Get-Architecture.It returns expected output" executed="True" result="Success" success="True" time="0.8781" asserts="0" description="Get-Architecture.It returns expected output">
                <results>
                  <test-case description="Returns x64 given an x64 URL" name="Get-Architecture.It returns expected output.Returns x64 given an x64 URL" time="0.2376" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Returns x86 given an x86 URL" name="Get-Architecture.It returns expected output.Returns x86 given an x86 URL" time="0.2211" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Returns x86 given a string that won't match anything" name="Get-Architecture.It returns expected output.Returns x86 given a string that won't match anything" time="0.2421" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Get-GitHubRepoRelease" executed="True" result="Success" success="True" time="5.0432" asserts="0" description="Get-GitHubRepoRelease">
            <results>
              <test-suite type="TestFixture" name="Get-GitHubRepoRelease.It correctly returns an object" executed="True" result="Success" success="True" time="2.6303" asserts="0" description="Get-GitHubRepoRelease.It correctly returns an object">
                <results>
                  <test-case description="Does not Throw" name="Get-GitHubRepoRelease.It correctly returns an object.Does not Throw" time="1.23" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Returns the expected properties" name="Get-GitHubRepoRelease.It correctly returns an object.Returns the expected properties" time="1.2288" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="ConvertTo-DateTime" executed="True" result="Success" success="True" time="5.6049" asserts="0" description="ConvertTo-DateTime">
            <results>
              <test-suite type="TestFixture" name="ConvertTo-DateTime.Format and return a datetime string" executed="True" result="Success" success="True" time="0.4107" asserts="0" description="ConvertTo-DateTime.Format and return a datetime string">
                <results>
                  <test-case description="Correctly formats the provided datetime" name="ConvertTo-DateTime.Format and return a datetime string.Correctly formats the provided datetime" time="0.2466" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="ConvertTo-Hashtable" executed="True" result="Success" success="True" time="6.2137" asserts="0" description="ConvertTo-Hashtable">
            <results>
              <test-suite type="TestFixture" name="ConvertTo-Hashtable.Test conversion to hashtable" executed="True" result="Success" success="True" time="0.4479" asserts="0" description="ConvertTo-Hashtable.Test conversion to hashtable">
                <results>
                  <test-case description="Converts a PSObject into a hashtable" name="ConvertTo-Hashtable.Test conversion to hashtable.Converts a PSObject into a hashtable" time="0.2763" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Get-Platform" executed="True" result="Success" success="True" time="7.1521" asserts="0" description="Get-Platform">
            <results>
              <test-suite type="TestFixture" name="Get-Platform.Ensure platform is returned" executed="True" result="Success" success="True" time="0.7791" asserts="0" description="Get-Platform.Ensure platform is returned">
                <results>
                  <test-case description="Given a platform string it returns the right platform" name="Get-Platform.Ensure platform is returned.Given a platform string it returns the right platform" time="0.362" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Given a string that won't match, returns Windows" name="Get-Platform.Ensure platform is returned.Given a string that won't match, returns Windows" time="0.2483" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Get-FileType" executed="True" result="Success" success="True" time="7.9941" asserts="0" description="Get-FileType">
            <results>
              <test-suite type="TestFixture" name="Get-FileType.Ensure file type is returned" executed="True" result="Success" success="True" time="0.6806" asserts="0" description="Get-FileType.Ensure file type is returned">
                <results>
                  <test-case description="Given a file path string it returns the right file type" name="Get-FileType.Ensure file type is returned.Given a file path string it returns the right file type" time="0.2361" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Given an file path string without an extension it returns null" name="Get-FileType.Ensure file type is returned.Given an file path string without an extension it returns null" time="0.2653" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Get-SourceForgeRepoRelease" executed="True" result="Success" success="True" time="9.1789" asserts="0" description="Get-SourceForgeRepoRelease">
            <results>
              <test-suite type="TestFixture" name="Get-SourceForgeRepoRelease.Validate function returns expected object" executed="True" result="Success" success="True" time="1.0282" asserts="0" description="Get-SourceForgeRepoRelease.Validate function returns expected object">
                <results>
                  <test-case description="Returns an object with expected properties" name="Get-SourceForgeRepoRelease.Validate function returns expected object.Returns an object with expected properties" time="0.8582" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Get-FunctionResource" executed="True" result="Success" success="True" time="10.1736" asserts="0" description="Get-FunctionResource">
            <results>
              <test-suite type="TestFixture" name="Get-FunctionResource.Ensure function resources are returned" executed="True" result="Success" success="True" time="0.8348" asserts="0" description="Get-FunctionResource.Ensure function resources are returned">
                <results>
                  <test-case description="Given a valid app it returns valid data" name="Get-FunctionResource.Ensure function resources are returned.Given a valid app it returns valid data" time="0.3929" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Given an invalid application, it throws" name="Get-FunctionResource.Ensure function resources are returned.Given an invalid application, it throws" time="0.2684" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Get-ModuleResource" executed="True" result="Success" success="True" time="11.9638" asserts="0" description="Get-ModuleResource">
            <results>
              <test-suite type="TestFixture" name="Get-ModuleResource.Ensure module resources are returned" executed="True" result="Success" success="True" time="1.6414" asserts="0" description="Get-ModuleResource.Ensure module resources are returned">
                <results>
                  <test-case description="Returns the module resource" name="Get-ModuleResource.Ensure module resources are returned.Returns the module resource" time="0.3861" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Given an invalid path, it throws" name="Get-ModuleResource.Ensure module resources are returned.Given an invalid path, it throws" time="0.2221" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Returns an object with the expected properties" name="Get-ModuleResource.Ensure module resources are returned.Returns an object with the expected properties" time="0.8746" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Invoke-RestMethodWrapper" executed="True" result="Success" success="True" time="12.7608" asserts="0" description="Invoke-RestMethodWrapper">
            <results>
              <test-suite type="TestFixture" name="Invoke-RestMethodWrapper.Ensure Invoke-RestMethodWrapper works as expected" executed="True" result="Success" success="True" time="0.6474" asserts="0" description="Invoke-RestMethodWrapper.Ensure Invoke-RestMethodWrapper works as expected">
                <results>
                  <test-case description="Returns data from a proper URL" name="Invoke-RestMethodWrapper.Ensure Invoke-RestMethodWrapper works as expected.Returns data from a proper URL" time="0.4803" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Invoke-SystemNetRequest" executed="True" result="Success" success="True" time="13.5347" asserts="0" description="Invoke-SystemNetRequest">
            <results>
              <test-suite type="TestFixture" name="Invoke-SystemNetRequest.Ensure Invoke-SystemNetRequest works as expected" executed="True" result="Success" success="True" time="0.6271" asserts="0" description="Invoke-SystemNetRequest.Ensure Invoke-SystemNetRequest works as expected">
                <results>
                  <test-case description="Returns data from a URL" name="Invoke-SystemNetRequest.Ensure Invoke-SystemNetRequest works as expected.Returns data from a URL" time="0.4702" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Resolve-SystemNetWebRequest" executed="True" result="Success" success="True" time="14.2709" asserts="0" description="Resolve-SystemNetWebRequest">
            <results>
              <test-suite type="TestFixture" name="Resolve-SystemNetWebRequest.Ensure Resolve-SystemNetWebRequest works as expected" executed="True" result="Success" success="True" time="0.585" asserts="0" description="Resolve-SystemNetWebRequest.Ensure Resolve-SystemNetWebRequest works as expected">
                <results>
                  <test-case description="Returns data from a URL" name="Resolve-SystemNetWebRequest.Ensure Resolve-SystemNetWebRequest works as expected.Returns data from a URL" time="0.3741" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Invoke-WebRequestWrapper" executed="True" result="Success" success="True" time="15.122" asserts="0" description="Invoke-WebRequestWrapper">
            <results>
              <test-suite type="TestFixture" name="Invoke-WebRequestWrapper.Ensure Invoke-WebRequestWrapper works as expected" executed="True" result="Success" success="True" time="0.6376" asserts="0" description="Invoke-WebRequestWrapper.Ensure Invoke-WebRequestWrapper works as expected">
                <results>
                  <test-case description="Returns data from a URL" name="Invoke-WebRequestWrapper.Ensure Invoke-WebRequestWrapper works as expected.Returns data from a URL" time="0.4777" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="New-EvergreenPath" executed="True" result="Success" success="True" time="16.139" asserts="0" description="New-EvergreenPath">
            <results>
              <test-suite type="TestFixture" name="New-EvergreenPath.Ensure New-EvergreenPath works as expected" executed="True" result="Success" success="True" time="0.733" asserts="0" description="New-EvergreenPath.Ensure New-EvergreenPath works as expected">
                <results>
                  <test-case description="Does not throw when creating a directory" name="New-EvergreenPath.Ensure New-EvergreenPath works as expected.Does not throw when creating a directory" time="0.2778" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Returns a string when creating a directory" name="New-EvergreenPath.Ensure New-EvergreenPath works as expected.Returns a string when creating a directory" time="0.2778" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Resolve-DnsNameWrapper" executed="True" result="Success" success="True" time="17.2664" asserts="0" description="Resolve-DnsNameWrapper">
            <results>
              <test-suite type="TestFixture" name="Resolve-DnsNameWrapper.Ensure Resolve-DnsNameWrapper works as expected" executed="True" result="Success" success="True" time="0.9859" asserts="0" description="Resolve-DnsNameWrapper.Ensure Resolve-DnsNameWrapper works as expected">
                <results>
                  <test-case description="Returns DNS records OK" name="Resolve-DnsNameWrapper.Ensure Resolve-DnsNameWrapper works as expected.Returns DNS records OK" time="0.8303" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Resolve-InvokeWebRequest" executed="True" result="Success" success="True" time="18.0302" asserts="0" description="Resolve-InvokeWebRequest">
            <results>
              <test-suite type="TestFixture" name="Resolve-InvokeWebRequest.Ensure Resolve-InvokeWebRequest works as expected" executed="True" result="Success" success="True" time="0.6151" asserts="0" description="Resolve-InvokeWebRequest.Ensure Resolve-InvokeWebRequest works as expected">
                <results>
                  <test-case description="Returns data from a URL" name="Resolve-InvokeWebRequest.Ensure Resolve-InvokeWebRequest works as expected.Returns data from a URL" time="0.4619" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Save-File" executed="True" result="Success" success="True" time="18.7525" asserts="0" description="Save-File">
            <results>
              <test-suite type="TestFixture" name="Save-File.Ensure Save-File works as expected" executed="True" result="Success" success="True" time="0.5735" asserts="0" description="Save-File.Ensure Save-File works as expected">
                <results>
                  <test-case description="Returns a string if the file is downloaded" name="Save-File.Ensure Save-File works as expected.Returns a string if the file is downloaded" time="0.4149" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>