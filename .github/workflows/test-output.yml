name: test-output

# Environment variables
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

# Controls when the action will run. 
on:
  #push:
  #  branches:
  #    - main
  #  paths:
  #    - 'Evergreen/**'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  output-pwsh:
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Install and cache PowerShell modules
        id: psmodulecache
        uses: potatoqualitee/psmodulecache@v4.5
        with:
          modules-to-cache: Evergreen
          shell: pwsh

      # Import GPG key
      - name: Import GPG key
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@v4
        with:
          gpg_private_key: ${{ secrets.GPGKEY }}
          passphrase: ${{ secrets.GPGPASSPHRASE }}
          git_user_signingkey: true
          git_commit_gpgsign: true
          git_config_global: true
          git_tag_gpgsign: true
          git_push_gpgsign: false
          git_committer_name: ${{ secrets.COMMIT_NAME }}
          git_committer_email: ${{ secrets.COMMIT_EMAIL }}

      # Run Pester tests
      - name: Update versions
        shell: pwsh
        run: |
          Find-EvergreenApp | Select-Object -ExpandProperty "Name" | `
            ForEach-Object { Get-EvergreenApp -Name $_ -ErrorAction "SilentlyContinue" -WarningAction "SilentlyContinue" | `
                Sort-Object -Property @{ Expression = { [System.Version]$_.Version }; Descending = $true }, "Architecture", "Channel", "Release", "Language", "Platform", "Branch", "Title", "Edition", "Type" -ErrorAction "SilentlyContinue" | `
                ConvertTo-Json | `
                Out-File -FilePath $([System.IO.Path]::Combine("${{ github.workspace }}/json", "$_.json")) -NoNewline -Encoding "utf8" -Verbose
          }

  output-powershell:
      runs-on: windows-latest

      # Steps represent a sequence of tasks that will be executed as part of the job
      steps:
        # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
        - uses: actions/checkout@v3
          with:
            ref: main

        # Run Pester tests
        - name: Update versions
          shell: powershell
          run: |
            git config --global core.safecrlf false
            git pull origin main

        - name: Install and cache PowerShell modules
          id: psmodulecache
          uses: potatoqualitee/psmodulecache@v4.5
          with:
            modules-to-cache: Evergreen
            shell: powershell

        # Run Pester tests
        - name: Update versions
          shell: powershell
          run: |
              Find-EvergreenApp | Select-Object -ExpandProperty "Name" | `
                ForEach-Object { Get-EvergreenApp -Name $_ -ErrorAction "SilentlyContinue" -WarningAction "SilentlyContinue" | `
                    Sort-Object -Property @{ Expression = { [System.Version]$_.Version }; Descending = $true }, "Architecture", "Channel", "Release", "Language", "Platform", "Branch", "Title", "Edition", "Type" -ErrorAction "SilentlyContinue" | `
                    ConvertTo-Json | `
                    Out-File -FilePath $([System.IO.Path]::Combine("${{ github.workspace }}/json", "$_.json")) -NoNewline -Encoding "utf8" -Verbose
              }
